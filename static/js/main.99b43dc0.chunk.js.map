{"version":3,"sources":["Components/ApiReq/PriceData.js","Components/Storage/NewTrade.js","Components/Storage/ExtraInfroFromCalc.js","Components/Storage/CryptoCoin.js","Components/Firebase/Firebase.js","Components/Firebase/Firebase_user_info.js","Components/Calc/CalculatorTab.jsx","Components/Storage/ExtraInfoFromChart.js","Components/Storage/ParamClickChart.js","Components/chart/ChartTab.jsx","Components/Storage/Chartclicked_data.js","Components/Navbar/SignOut.js","Components/Navbar/Login.js","Components/Navbar/Navbar.js","Components/Footer/Footer.jsx","Components/Storage/AllTrades.js","Components/tradetracker/TradeTrackerPrev.jsx","Components/Pages/Homepage.jsx","Components/Pages/CreateAccountPage.jsx","Components/Storage/UserEmail.js","Components/Storage/UserId.js","Components/Pages/ViewTades_Port.jsx","App.js","reportWebVitals.js","Components/Storage/Storage.js","index.js"],"names":["GetCryptoInfo","currentCoin","axios","get","cryptoCoins","cryptoName","cryptoImage","getCryptoImage","getCoin","find","crypto","unixToDate","unix","Date","toLocaleString","newTradeSlice","createSlice","name","initialState","value","reducers","setNewTrade","state","action","payload","actions","extraInfoCalctSlice","setCalcInfo","cryptoCoin","cryptoCoinSlice","setCoin","firebaseConfig","apiKey","concat","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","db","getFirestore","auth","getAuth","getAnalytics","createUserDataBase","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","userId","getUserRef","wrap","_context","prev","next","doc","getDoc","sent","exists","setDoc","stop","_x","apply","this","arguments","displayTradeDataBase","_ref2","_callee2","trades","getUserCollRef","_context2","collection","getDocs","forEach","trade","tradeId","id","posType","data","entryPrice","takeProfit","stopLoss","date","push","sort","b","abrupt","_x2","addTradeDatabase","_ref3","_callee3","tradeInfo","uniqueId","_context3","addDoc","_x3","_x4","fetchTradeDataBase","_ref4","_callee4","tradeDate","userColl","docId","_context4","query","where","console","log","deleteDoc","_x5","_x6","CalculatorTab","memo","dispatch","useDispatch","useSelector","_useState","useState","_useState2","slicedToArray","updateStopLoss","_useState3","_useState4","updateTakeProfit","_useState5","_useState6","limitPrice","updateLimitPrice","_useState7","_useState8","positionType","setPosType","_useState9","_useState10","orderType","updateOrderType","_useState11","_useState12","filled","updateFill","_useState13","_useState14","checkBox","updateCheckBox","_useState15","_useState16","time","updateTime","paramChartClicked","paramClick","handleOrderType","event","target","handlePosition","handleCheckBox","useEffect","marketOrderEmpty","price","colorStyleTime","input","border","backgroundColor","ButtonAddToPortfolio","useCallback","infoChartTab","extraInfo","userEmail","userData","_useState17","_useState18","confirmAdd","updateConfirmAdd","_useState19","_useState20","displayNotLogged","updateDisplayNotLogged","react_default","createElement","Fragment","className","onClick","getTime","newTrade","addNewTrade","limitPriceEmpty","dateLimitPriceEmpty","handleAddToPortfolio","src","alt","map","coin","index","key","e","style","display","color","readOnly","placeholder","type","onChange","checked","extraInfoChartSlice","setExtraInfo","paramClickSlice","setParamClick","ChartTab","currentTimeFrame","updateTimeFrame","getLivePrice","useRef","chart","newSeries","chartContainerRef","purchasePrice","stopLossPrice","takeProfPrice","calcTabInfo","calcInfo","allTrades","_useTransition","useTransition","_useTransition2","startTransition","chartOptions","defineProperty","handleScale","axisPressedMouseMove","layout","textColor","grid","vertLines","horzLines","crosshair","mode","CrosshairMode","Normal","priceScale","borderColor","timeScale","width","current","clientWidth","height","clientHeight","timeVisible","secondVisible","createChart","fitContent","addCandlestickSeries","subscribeClick","param","point","coordinateToPrice","y","toFixed","Number","isNaN","resizeO","ResizeObserver","applyOptions","observe","disconnect","conn","WebSocket","toLowerCase","GetLiveCandle","onmessage","liveData","JSON","parse","editLiveData","k","t","open","o","high","h","low","l","close","c","update","GetCandles","then","Resp","candles","d","candleLen","length","setData","updatePosPriceChart","stopOrTake","percentChange","getTp","getSl","updatePriceChart","priceLocal","stopLossLocal","takeProfitLocal","createPriceLine","title","lineWidth","lineStyle","axisLabelVisible","lineVisible","takeProfitUsd","parseFloat","stopLossUsd","removePriceLine","markers","position","shape","text","setMarkers","TopInfoContainer","cryptoInfo","updateCryptoInfo","setTimerInfo","resp","priceChangePercent","lowPrice","openPrice","getInfoInterval","setInterval","clearInterval","top","timeFrame","ref","chartClickedSlice","displayChart","SignOut","props","currentUserEmail","displayLogin","updateDisplayLogin","react_router_dom","to","signOut","catch","error","Login","email","updateEmail","password","updatePassword","updateError","provider","GithubAuthProvider","signInWithPopup","result","credentialFromResult","accessToken","user","code","message","customData","credentialFromError","GoogleAuthProvider","onSubmit","preventDefault","signInWithEmailAndPassword","userCredential","errorCode","required","Navbar","chartClick","chartClicked","menuClick","updateMenuClick","Login_Login","SignOut_SignOut","url","cName","item","href","Footer","allTradesSlice","setAllTrades","TradeTracker","fetchTrade","oldTrades","updateOldTrades","newTrades","updateNewTrades","deleteTrade","array","updateArray","newArray","filter","_","i","res","err","newTrradesArr","toConsumableArray","DisplayOldTrades","tradeTrackAnim","useSpring","opacity","x","from","symbolLogo","arrayDate","split","react_spring_esm","tr","DisplayNewTrades","Homepage","chartRemoveAnim","enter","calculatorAnim","Components_Navbar_Navbar","div","CalculatorTab_CalculatorTab","objectSpread","ChartTab_ChartTab","Footer_Footer","CreateAccountPage","usenavigate","useNavigate","createUserWithEmailAndPassword","userDataSlice","setUserData","userIdSlice","setUserId","ViewTrades_Port","App","load","updateLoad","unsub","onAuthStateChanged","uid","basename","react_router","exact","path","element","CreateAccountPage_CreateAccountPage","ViewTades_Port_ViewTrades_Port","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","Store","configureStore","reducer","chartClickedReducer","userEmailReducer","userIdSlicer","extraInfoSlice","ReactDOM","createRoot","document","getElementById","render","es","store","src_App"],"mappings":"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","file":"static/js/main.99b43dc0.chunk.js","sourcesContent":["\nimport axios from \"axios\";\n\n//gets 500 candle sticks \nexport const GetCandles=(currentTimeFrame,currentCoin)=>{\n\n  \n  return axios.get('https://api.binance.com/api/v3/klines?symbol='+currentCoin+'&interval='+currentTimeFrame+'&limit=1000')\n  \n}\n\n//gets 24 hour percent change and crypto info\nexport const GetCryptoInfo=(currentCoin)=>{\n  return axios.get('https://api.binance.com/api/v3/ticker?symbol='+currentCoin)\n}\n//gets current candle stick info from binance \nexport const GetLiveCandle = (currentTimeFrame, currentCoin)=>{\n\n  var symbol_LowerCase = currentCoin\n  var symbol_LowerCase = symbol_LowerCase.toLowerCase()\n  return 'wss://stream.binance.com:9443/ws/'+symbol_LowerCase+'@kline_'+currentTimeFrame\n}\n\n//gets current bitcoin price \n// export const GetCurrentPrice = ()=>{\n//   return axios.get('https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT')\n// }\n\n//get coins \nexport const cryptoCoins = [\n  {\n    cryptoName:'BTCUSDT',\n    cryptoImage:'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png'\n  },{\n    cryptoName:'ETHUSDT',\n    cryptoImage:'https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png'\n\n  },{\n    cryptoName:'SOLUSDT',\n    cryptoImage:'https://s2.coinmarketcap.com/static/img/coins/64x64/2010.png'\n  },{\n    cryptoName:'DOTUSDT',\n    cryptoImage:'https://s2.coinmarketcap.com/static/img/coins/64x64/6636.png'\n  },{\n    cryptoName:'AVAXUSDT',\n    cryptoImage:'https://s2.coinmarketcap.com/static/img/coins/64x64/5805.png'\n  }\n\n]\n\n//incorrect function\nexport const getCryptoImage=(getCoin)=>{\n\n  var coin=cryptoCoins.find((crypto)=>{\n      return crypto.cryptoName === getCoin\n  })\n  // console.log(coin.cryptoImage)\n  return coin.cryptoImage\n  \n}\n\nexport const unixToDate=(unix)=>{\n  const milliseconds = unix \n  const dateObject = new Date(milliseconds)\n  const humanDateFormat = dateObject.toLocaleString()\n  return humanDateFormat\n}\n\n\n","\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: null,\n}\n\n const newTradeSlice = createSlice({\n  name: 'tradeInfo',\n  initialState,\n  reducers: {\n    setNewTrade: (state,action) => {\n      \n      state.value = action.payload\n    },\n\n  },\n})\n\n\n// Action creators are generated for each case reducer function\nexport const { setNewTrade } = newTradeSlice.actions\n\nexport default newTradeSlice.reducer\n","\n// data used to pass from chart -> calc\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: null,\n}\n\n const extraInfoCalctSlice = createSlice({\n  name: 'extraInfoCalc',\n  initialState,\n  reducers: {\n    setCalcInfo: (state,action) => {\n      \n      state.value = action.payload\n      \n    },\n  },\n})\n\n\n// Action creators are generated for each case reducer function\nexport const { setCalcInfo } = extraInfoCalctSlice.actions\n\nexport default extraInfoCalctSlice.reducer\n","\nimport { createSlice } from '@reduxjs/toolkit';\nimport { cryptoCoins } from '../ApiReq/PriceData'\nconst initialState = {\n    value:{\n        cryptoCoin: cryptoCoins[0].cryptoName,\n        cryptoImage: cryptoCoins[0].cryptoImage\n    }\n}\n\n const cryptoCoinSlice = createSlice({\n  name: 'cryptoCoin',\n  initialState,\n  reducers: {\n    setCoin: (state,action) => {\n      \n      state.value = action.payload\n    },\n\n  },\n})\n\n\n// Action creators are generated for each case reducer function\nexport const { setCoin } = cryptoCoinSlice.actions\n\nexport default cryptoCoinSlice.reducer\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from \"firebase/auth\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from 'firebase/firestore';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey:`${process.env.REACT_APP_APIKEY}`,\n  authDomain:`${process.env.REACT_APP_APIAUTHDOM}`,\n  projectId: `${process.env.REACT_APP_PROJID}`,\n  storageBucket: `${process.env.REACT_APP_STORBUCKET}`,\n  messagingSenderId: `${process.env.REACT_APP_MESSAGESENDER}`,\n  appId: `${process.env.REACT_APP_APPID}`,\n  measurementId: `${process.env.REACT_APP_MEASUREMENTID}`\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// const analytics = firebase.getAnalytics(app);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\ngetAnalytics(app);\n\nexport {db,auth};","import { db } from \"./Firebase\";\nimport { collection, setDoc, doc, getDoc, getDocs, where, addDoc, query,deleteDoc } from \"firebase/firestore\";\n\n\n\n//create a user database\nexport const createUserDataBase = async (userId) => {\n    //get specific user \n    //collection\n\n    const getUserRef = doc(db, 'user', userId);\n    //doc snap\n    const docSnap = await getDoc(getUserRef);\n    //check if user exists\n    if (docSnap.exists()) {\n        //if no existence create one \n    } else {\n        //get collection of all users \n        await setDoc(doc(db, 'user', userId), {})\n    }\n}\n\n//add trade \nexport const displayTradeDataBase = async (userId) => {\n    var trades = []\n\n    // // display all trades\n    const getUserCollRef = collection(db, 'user', userId, 'trade');\n    //const docSnap = query(getUserCollRef)\n    const docSnap = await getDocs(getUserCollRef)\n\n    docSnap.forEach((doc) => {\n\n        var trade = {\n            tradeId: doc.id,\n            posType: doc.data().posType,\n            entryPrice: doc.data().entryPrice,\n            takeProfit: doc.data().takeProfit,\n            stopLoss: doc.data().stopLoss,\n            date: doc.data().date,\n            cryptoCoin: doc.data().cryptoCoin\n        }\n        //fetches old to new trades \n        \n        trades.push(trade)\n    })\n\n    //we have to reverse the trades so new -> old b-a and sort date \n    trades = trades.sort((a,b)=>b.date-a.date);\n   \n\n    return trades\n\n\n}\n\nexport const addTradeDatabase = async (tradeInfo,uniqueId) => {\n    \n    //add a trade\n    await addDoc(collection(db, 'user', uniqueId, 'trade'), {\n        posType: tradeInfo.posType,\n        entryPrice: tradeInfo.entryPrice,\n        takeProfit: tradeInfo.takeProfit,\n        stopLoss: tradeInfo.stopLoss,\n        date: tradeInfo.date,\n        cryptoCoin: tradeInfo.cryptoCoin\n\n    })\n}\n\n//used to fetch and delete a trade (this could be used to edit in the future)\nexport const fetchTradeDataBase =async (tradeDate, uniqueId) => {\n    const userColl = collection(db, \"user\", uniqueId, 'trade');\n    // Create a query against the collection.\n    const trade = query(userColl, where(\"date\", \"==\", tradeDate));\n\n    const tradeSnapshot = await getDocs(trade);\n    var docId;\n    tradeSnapshot.forEach((doc) => {\n        // doc.data() is never undefined for query doc snapshots\n        console.log(doc.id, \" => \", doc.data());\n        docId = doc.id\n    });\n    \n    await deleteDoc(doc(db, \"user\", uniqueId,'trade',docId));\n\n\n\n}\n","import React, { memo, useCallback, useRef } from \"react\"\nimport { useState } from 'react';\nimport './CalculatorTab.css'\nimport { cryptoCoins, getCryptoImage, unixToDate } from \"../ApiReq/PriceData\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setNewTrade } from '../Storage/NewTrade'\nimport { useEffect } from \"react\";\nimport { setCalcInfo } from '../Storage/ExtraInfroFromCalc'\nimport { update } from \"react-spring\";\nimport { margin, textAlign } from \"@mui/system\";\nimport { setCoin } from '../Storage/CryptoCoin'\nimport { addTradeDatabase } from \"../Firebase/Firebase_user_info\";\n\n\nexport const CalculatorTab = memo(() => {\n\n    const dispatch = useDispatch();\n    const userId = useSelector((state) => state.userId.value)\n    const [stopLoss, updateStopLoss] = useState('')\n    const [takeProfit, updateTakeProfit] = useState('')\n    const [limitPrice, updateLimitPrice] = useState('')\n    const [positionType, setPosType] = useState('long')\n    const [orderType, updateOrderType] = useState('marketOrder')\n    const [filled, updateFill] = useState(false)\n    const [checkBox, updateCheckBox] = useState(false)\n    const [time, updateTime] = useState(['', ''])\n\n    var paramChartClicked = useSelector(state => state.paramClick.value)\n    var currentCoin = useSelector(state => state.cryptoCoin.value)\n\n\n    //limit order or market\n    const handleOrderType = (event) => {\n\n        updateOrderType(event.target.id)\n\n    }\n    //long or short \n    const handlePosition = (event) => {\n\n        setPosType((event.target.value));\n\n    };\n    //handle checkbox - clear data when pressed\n    const handleCheckBox = () => {\n        updateCheckBox(!checkBox)\n        updateLimitPrice('')\n        updateStopLoss('')\n        updateTakeProfit('')\n        updateTime(['', ''])\n    }\n    //clear input when another chart is clicked \n    useEffect(() => {\n        updateLimitPrice('')\n        updateStopLoss('')\n        updateTakeProfit('')\n        updateTime(['', ''])\n    }, [currentCoin])\n\n    //send data to chart tab\n    useEffect(() => {\n        var limitPriceEmpty = (limitPrice === '' || stopLoss === '' || takeProfit === '')\n        var marketOrderEmpty = (stopLoss === '' || takeProfit === '')\n\n        if (limitPriceEmpty && orderType === 'limitOrder') {\n            dispatch(setCalcInfo(null));\n            return;\n        } else if (marketOrderEmpty && orderType === 'marketOrder') {\n            dispatch(setCalcInfo(null));\n            return;\n        }\n        if (orderType === 'marketOrder') {\n\n            dispatch(setCalcInfo({\n                orderType: orderType,\n                stopLoss: stopLoss,\n                takeProfit: takeProfit,\n                price: null,\n                positionType: positionType,\n                checkBox: false,\n\n            }))\n        } else if (orderType === 'limitOrder') {\n\n\n            dispatch(setCalcInfo({\n                orderType: orderType,\n                takeProfit: takeProfit,\n                stopLoss: stopLoss,\n                price: limitPrice,\n                positionType: positionType,\n                checkBox: checkBox,\n            })\n\n            )\n        }\n    }, [stopLoss, takeProfit, limitPrice, positionType, orderType, paramChartClicked, checkBox])\n\n    //when clicked on chart update input\n    useEffect(() => {\n        if (checkBox) {\n\n            updateLimitPrice(paramChartClicked.price)\n            var date = unixToDate(paramChartClicked.time)\n            updateTime([paramChartClicked.time, date])\n\n        }\n\n    }, [paramChartClicked])\n    //change time and limit order style\n    const colorStyleTime = (input) => {\n        return {\n\n            border: (filled && input === '') ? '1px solid red' : '1px solid black',\n            backgroundColor: (checkBox) ? '#9f9f9f' : '#ffffff'\n        }\n    }\n\n    const MarketOrderDiv = () => {\n        return (\n            <div className=\"calc_inputField_outer\">\n\n\n                <div className=\"calc_inputField\">\n                    {(checkBox) ? (<div className=\"calc_inputBox\">\n                        click on the chart where you would like to placed a trade !!\n                    </div>) : ''}\n\n\n                    {(checkBox) ? (\n\n                        <div className=\"calc_inputBox\" style={{ display: (orderType === 'limitOrder') ? 'block' : 'none' }}>\n                            <label className=\"calc_inputLabel\" style={{ color: time[0] === '' ? 'transparent' : 'black' }} >Time</label>\n                            <input\n                                style={colorStyleTime(time[0])}\n                                readOnly={true}\n\n                                className='calc_input'\n                                placeholder='Time'\n                                value={time[1]} />\n                        </div>\n                    ) : ''}\n\n                    <div className=\"calc_inputBox\" style={{ display: (orderType === 'limitOrder') ? 'block' : 'none' }}>\n                        <label className=\"calc_inputLabel\" style={{ color: limitPrice === '' ? 'transparent' : 'black' }} >Limit price</label>\n                        <input\n                            readOnly={checkBox}\n                            type=\"number\"\n                            onChange={(event) => { updateLimitPrice(event.target.value) }}\n                            className='calc_input'\n                            id=\"LimitPrice\"\n                            value={limitPrice}\n                            placeholder='Limit Price'\n                            style={colorStyleTime(limitPrice)} />\n                    </div>\n\n\n                    <div className=\"calc_inputBox\" >\n                        <label className=\"calc_inputLabel\" style={{ color: stopLoss === '' ? 'transparent' : 'black' }} >stop loss</label>\n                        <input type=\"number\" onChange={(event) => { updateStopLoss(event.target.value) }} className='calc_input' id=\"stopLossPercent\" value={stopLoss} placeholder='Stop Loss In Percent'\n                            style={(filled && stopLoss === '') ? { border: '1px solid red' } : { color: '1px solid black' }} />\n                    </div>\n\n\n                    <div className=\"calc_inputBox\" >\n                        <label className=\"calc_inputLabel\" style={{ color: takeProfit === '' ? 'transparent' : 'black' }}>take profit</label>\n                        {/* <label style={takeProfPercent.current===''?{display:'none'}:{display:'block'}}>take profit</label> */}\n                        <input type=\"number\" className='calc_input' onChange={(event) => { updateTakeProfit(event.target.value) }} id='takeProfPercent' value={takeProfit} placeholder='Take Profit In Percent'\n                            style={(filled && takeProfit === '') ? { border: '1px solid red' } : { color: '1px solid black' }} />\n                    </div>\n                    {(orderType === 'limitOrder') ? (\n\n                        <div className=\"calc_inputBox\">\n                            <label>Click on the Chart  </label>\n                            <input type=\"checkbox\" checked={checkBox} onChange={handleCheckBox} />\n                        </div>) : ''\n                    }\n\n                    <div className=\"calc_inputBox\">\n\n                        <div className=\"calc_radio\">\n                            <label>\n                                <a>Long </a>\n                                <input type=\"radio\" value=\"long\" className=\"calc_radio_check\" checked={positionType === 'long'} onChange={handlePosition} />\n                            </label>\n                        </div>\n                        <div className=\"calc_radio\">\n                            <label>\n                                <a>Short </a>\n                                <input type=\"radio\" value=\"short\" className=\"calc_radio_check\" checked={positionType === 'short'} onChange={handlePosition} />\n                            </label>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n\n        )\n    }\n\n\n    const ButtonAddToPortfolio = useCallback(() => {\n        \n        //requires validation\n        const infoChartTab = useSelector((state) => state.extraInfo.value)\n        const userEmail = useSelector((state) => state.userData.value)\n        const [confirmAdd, updateConfirmAdd] = useState(false)\n        const [displayNotLogged, updateDisplayNotLogged] = useState(false)\n        \n        \n        //used when confirm is pressed on pop up \n        const addNewTrade = () => {\n            \n            \n            const date = new Date().getTime()\n\n            //dispatch if data is received from chart tab\n            if (infoChartTab &&confirmAdd && orderType === 'marketOrder') {\n                const newTrade = {\n                    posType: positionType,\n                    entryPrice: infoChartTab.price,\n                    takeProfit: infoChartTab.takeProfit,\n                    stopLoss: infoChartTab.stopLoss,\n                    date: date,\n                    cryptoCoin: currentCoin.cryptoCoin,\n                    cryptoImage: getCryptoImage(currentCoin.cryptoCoin)\n                }\n                dispatch(setNewTrade(newTrade))\n                addTradeDatabase(newTrade, userId);\n            }\n            //fix\n            else if (infoChartTab&&confirmAdd && orderType === 'limitOrder') {\n                \n                const newTrade = {\n                    posType: positionType,\n                    entryPrice: infoChartTab.price,\n                    takeProfit: infoChartTab.takeProfit,\n                    stopLoss: infoChartTab.stopLoss,\n                    date: (paramChartClicked) ? paramChartClicked.time : date,\n                    cryptoCoin: currentCoin.cryptoCoin,\n                    cryptoImage: getCryptoImage(currentCoin.cryptoCoin)\n                }\n                dispatch(setNewTrade(newTrade))\n                addTradeDatabase(newTrade, userId);\n            }\n            updateConfirmAdd(false)\n            updateStopLoss('')\n            updateTakeProfit('')\n            updateLimitPrice('')\n            updateTime(['', ''])\n\n\n            updateFill(false)\n        }\n        //used when add to portfolio button is pressed\n        const handleAddToPortfolio = () => {\n            \n            var limitPriceEmpty = (limitPrice === '' || stopLoss === '' || takeProfit === '')\n            var dateLimitPriceEmpty = (limitPrice === '' || stopLoss === '' || takeProfit === '' || time[0] === '')\n            var marketOrderEmpty = (stopLoss === '' || takeProfit === '')\n\n            //check if there is a value \n            if (marketOrderEmpty && orderType === 'marketOrder') {\n                console.log('Plase Fill Market Info')\n                updateFill(true)\n                return\n            } else if (limitPriceEmpty && orderType === 'limitOrder' && !checkBox) {\n                console.log('Please Fill Limit Info')\n                updateFill(true)\n                return\n            } else if (dateLimitPriceEmpty && orderType == 'limitOrder' && checkBox) {\n                console.log('Please Fill Limit Info')\n                updateFill(true)\n                return\n\n            }\n            //All of the values are filled and now confirmation button appears \n\n            updateConfirmAdd(true)\n        }\n\n        return (\n            <>\n\n                {(confirmAdd) ?\n                    (<div\n                        className='calc_output_button_confirm'>\n                        <button className=\"calc_output_button_confirm_cancel\" onClick={() => updateConfirmAdd(false)}>Cancel</button>\n                        <button className='calc_output_button_confirm_confirm' onClick={() => addNewTrade()}>Confirm!</button>\n\n                    </div>) : ''\n                }\n\n                <button\n                    className={(userEmail !== null) ? 'calc_output_button' : 'calc_output_button_false'}\n                    onClick={() => (userEmail !== null) ? handleAddToPortfolio() : updateDisplayNotLogged(true)}>\n                    <p>Add Trade To Portfolio</p>\n                    {\n                        (!userEmail) ? (\n                            <i className=\"fa-solid fa-lock fa-2x\"></i>\n                        ) : ''\n                    }\n                </button>\n\n                {(displayNotLogged) ?\n                    (<div\n                        className=\"calc_output_button_notSignedIn\">\n                        <i onClick={() => updateDisplayNotLogged(false)} className=\"fa-solid fa-location-crosshairs fa-2x\"></i>\n\n                        <p>You need to sign in !</p>\n                        <p>• Sign in to add trades</p>\n                        <p>• View trades on chart </p>\n                        <p>• View and track portfolio (coming soon)</p>\n                    </div>) : ''\n                }\n         \n            </>\n        )\n    },[stopLoss, takeProfit, limitPrice, positionType, orderType, checkBox])\n\n\n    return (\n        <>\n            <div className=\"calc_outer\" >\n\n                <div className=\"calc_infoBox\">\n\n                    <img className=\"cryptoImage\" src={currentCoin.cryptoImage} alt=\"alternatetext\"></img>\n                    <p className=\"cryptoName\">{currentCoin.cryptoCoin}</p>\n                    <i className=\"fa-solid fa-angle-up\"></i>\n\n                    <div className=\"calc_infoBox_cryptoDropDown-content\">\n                        {\n                            cryptoCoins.map((coin, index) => {\n\n                                return (\n                                    <div\n                                        key={index}\n                                        className='calc_infoBox_cryptoDropDown-content-div'\n                                        onClick={() => dispatch(setCoin({\n                                            cryptoCoin: coin.cryptoName,\n                                            cryptoImage: coin.cryptoImage\n                                        }))}>\n\n                                        <img className=\"cryptoImage\" src={coin.cryptoImage} alt=\"alternatetext\"></img>\n                                        <p>{coin.cryptoName}</p>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n\n\n                </div>\n                <div className=\"calc_Pos_Button\">\n\n                    <div className=\"calc_btn-group\">\n                        <button id=\"marketOrder\" onClick={(e)=>handleOrderType(e)} className='orderType'>Market Order</button>\n                        <button id=\"limitOrder\" onClick={(e)=>handleOrderType(e)} className='orderType'>Limit Order</button>\n                    </div>\n\n\n                </div>\n                {\n                    MarketOrderDiv()\n                }\n                <div className=\"calc_output\">\n                    \n    \n                    <ButtonAddToPortfolio />\n                \n\n                </div>\n            </div>\n        </>\n    )\n\n\n});\n\n","\n// data used to pass from chart -> calc\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: null,\n}\n\n const extraInfoChartSlice = createSlice({\n  name: 'extraInfo',\n  initialState,\n  reducers: {\n    setExtraInfo: (state,action) => {\n      \n      state.value = action.payload\n    },\n\n  },\n})\n\n\n// Action creators are generated for each case reducer function\nexport const { setExtraInfo } = extraInfoChartSlice.actions\n\nexport default extraInfoChartSlice.reducer\n","\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value:{\n    price:'',\n    time:''\n  }\n}\n\n const paramClickSlice = createSlice({\n  name: 'ParamClicked',\n  initialState,\n  reducers: {\n    setParamClick: (state,action) => {\n      \n      state.value = action.payload\n    },\n\n  },\n})\n\n\n// Action creators are generated for each case reducer function\nexport const { setParamClick } = paramClickSlice.actions\n\nexport default paramClickSlice.reducer\n","import './ChartTab.css'\nimport React, { useState, useEffect, useTransition } from 'react';\nimport { GetCandles, GetLiveCandle } from '../ApiReq/PriceData';\n\nimport { createChart, CrosshairMode, LineStyle } from 'lightweight-charts';\nimport { useRef } from 'react';\nimport { useCallback } from 'react';\n\n\nimport { GetCryptoInfo } from '../ApiReq/PriceData'\nimport { setExtraInfo } from '../Storage/ExtraInfoFromChart'\nimport { setParamClick } from '../Storage/ParamClickChart'\nimport { useDispatch, useSelector } from 'react-redux';\n\n//https://rmolinamir.github.io/typescript-cheatsheet/\n\nexport const ChartTab = () => {\n\n\n    const [currentTimeFrame, updateTimeFrame] = useState('30m')\n    const timeFrames = ['30m', '1h', '4h']\n    const getLivePrice = useRef(null);\n\n\n    var dispatch = useDispatch()\n    var chart = useRef(null);\n    var newSeries = useRef(null);\n    const chartContainerRef = useRef();\n    const purchasePrice = useRef(null);\n    const stopLossPrice = useRef(null);\n    const takeProfPrice = useRef(null);\n    const calcTabInfo = useSelector(state => state.calcInfo.value)\n    const cryptoCoin = useSelector(state => state.cryptoCoin.value.cryptoCoin)\n    const allTrades = useSelector((state) => state.allTrades.value)\n    const [isPending, startTransition] = useTransition()\n\n    //create chart \n    useEffect(\n        () => {\n            const chartOptions = {\n                handleScale: {\n                    axisPressedMouseMove: true\n                },\n                layout: {\n                    backgroundColor: '#253248',\n                    textColor: 'rgba(255, 255, 255, 0.9)',\n                },\n                grid: {\n                    vertLines: {\n                        color: '#334158',\n                    },\n                    horzLines: {\n                        color: '#334158',\n                    },\n                },\n                crosshair: {\n                    mode: CrosshairMode.Normal,\n\n                },\n                priceScale: {\n                    borderColor: '#485c7b',\n                },\n                timeScale: {\n                    borderColor: '#485c7b',\n                },\n                width: chartContainerRef.current.clientWidth,\n                height: chartContainerRef.current.clientHeight,\n                timeScale: {\n                    timeVisible: true,\n                    secondVisible: false,\n                    // borderVisible:false\n                }\n            };\n\n            //create chart at chartContainerRef with rhose options \n            chart.current = createChart(chartContainerRef.current, chartOptions);\n            chart.current.timeScale().fitContent();\n            //FETCH OLD AND LIVE CANDLES \n            newSeries.current = chart.current.addCandlestickSeries()\n\n            function myClickHandler(param) {\n                if (!param.point) {\n                    return;\n                }\n                const price = newSeries.current.coordinateToPrice(param.point.y).toFixed(2)\n                var time = (param.time) * 1000\n                time = (Number.isNaN(time)) ? '' : time\n                // console.log(time)\n                dispatch(setParamClick({\n                    price: price,\n                    time: time\n                }))\n\n                // console.log(`Click at ${param.point.x}, ${param.point.y}. The time is ${param.time}.`);\n            }\n\n            chart.current.subscribeClick(myClickHandler);\n\n            //used to resize observer\n            const resizeO = new ResizeObserver(() => {\n                chart.current.applyOptions(\n                    {\n                        width: chartContainerRef.current.clientWidth,\n                        height: chartContainerRef.current.clientHeight,\n                    });\n            })\n\n            resizeO.observe(chartContainerRef.current)\n\n\n            return () => {\n                resizeO.disconnect()\n            }\n\n        }, []);\n\n    //update price chart \n    useEffect(() => {\n\n        const conn = new WebSocket(GetLiveCandle(currentTimeFrame, cryptoCoin));\n        //taken fron priceData.js\n        startTransition(()=>{\n        \n\n            conn.onmessage = function (event) {\n                var liveData = JSON.parse(event.data)\n    \n                var editLiveData = {\n                    time: liveData.k.t / 1000,\n                    open: liveData.k.o,\n                    high: liveData.k.h,\n                    low: liveData.k.l,\n                    close: liveData.k.c\n                }\n                getLivePrice.current = editLiveData.close;\n                newSeries.current.update(editLiveData)\n            }\n            //taken fron priceData.js \n            GetCandles(currentTimeFrame, cryptoCoin)\n                .then(Resp => {\n    \n                    const candles = Resp.data.map((d) => ({\n    \n                        'time': d[0] / 1000,\n                        'open': d[1],\n                        'high': d[2],\n                        'low': d[3],\n                        'close': d[4]\n                    }))\n                    //As web scoket is delayed by 2 seconds, im setting live price to last candle open price \n                    const candleLen = candles.length\n    \n                    getLivePrice.current = candles[candleLen - 1].open\n                    newSeries.current.setData(candles)\n                })\n                \n            })\n            \n\n        return () => {\n            conn.close()\n        }\n    }, [currentTimeFrame, cryptoCoin])\n\n\n    //used to delete price lines function\n    const deletePriceChart = () => {\n\n        if (purchasePrice.current) {\n\n            newSeries.current.removePriceLine(purchasePrice.current)\n            purchasePrice.current = null\n\n            newSeries.current.removePriceLine(stopLossPrice.current)\n            stopLossPrice.current = null\n\n            newSeries.current.removePriceLine(takeProfPrice.current)\n            takeProfPrice.current = null\n\n        }\n    }\n\n    //price passed in, position type(long/short), tp or sl\n    const updatePosPriceChart = (price, positionType, stopOrTake, percentChange) => {\n\n\n        if (stopOrTake === 'takeProfit') {\n            //if long add +\n            if (positionType === 'long') {\n                var getTp = price + ((percentChange / 100) * price)\n                //if short take away --\n            } else if (positionType === 'short') {\n                var getTp = price - ((percentChange / 100) * price)\n            }\n            return getTp\n        }\n        //adjust stop loss\n        else {\n            //if short \n            if (positionType === 'long') {\n                var getSl = price - ((percentChange / 100) * price)\n                //if long take away --\n            } else if (positionType === 'short') {\n                var getSl = price + ((percentChange / 100) * price)\n            }\n            return getSl\n        }\n\n    }\n\n    //used to add and update stop loss and take profit - used to dispatch price sl and tp to calc \n    const updatePriceChart = (priceLocal, stopLossLocal, takeProfitLocal, positionType, checkBox) => {\n\n        var priceLines = purchasePrice.current === null && stopLossPrice.current === null && takeProfPrice.current === null\n        //if price line exists \n        if (priceLines) {\n            //create price lines (current price) - subject to change\n            purchasePrice.current = newSeries.current.createPriceLine({\n                title: 'entry @',\n                color: '#b0c4de',\n                lineWidth: 1,\n                lineStyle: null,\n                axisLabelVisible: true,\n                lineVisible: true,\n            });\n            //create stop loss price\n            stopLossPrice.current = newSeries.current.createPriceLine({\n                title: 'StopLoss @',\n                color: 'red',\n                lineWidth: 2,\n                lineStyle: null,\n                axisLabelVisible: true,\n                lineVisible: true\n            })\n\n            //create take profit\n            takeProfPrice.current = newSeries.current.createPriceLine({\n                title: 'TakeProfit @',\n                color: 'green',\n                lineWidth: 2,\n                lineStyle: null,\n                axisLabelVisible: true,\n                lineVisible: true\n            })\n        }\n        \n        var takeProfitUsd = updatePosPriceChart(parseFloat(priceLocal), positionType, 'takeProfit', takeProfitLocal)\n        var stopLossUsd = updatePosPriceChart(parseFloat(priceLocal), positionType, 'stopLoss', stopLossLocal)\n\n        purchasePrice.current.applyOptions({\n\n            price: priceLocal\n        })\n\n        takeProfPrice.current.applyOptions({\n            price: takeProfitUsd\n        })\n\n        stopLossPrice.current.applyOptions({\n            price: stopLossUsd\n        })\n\n        //dispatch to calculator tab\n        dispatch(setExtraInfo({\n            price: parseFloat(priceLocal).toFixed(2),\n            stopLoss: stopLossUsd.toFixed(2),\n            takeProfit: takeProfitUsd.toFixed(2)\n        }))\n\n    }\n\n\n    //used to detect if values are changed \n    useEffect(() => {\n\n\n        if (calcTabInfo === null) {\n            //as there is not data coming from calc, we reset and send null data back \n            dispatch(setExtraInfo(null))\n            //make sure to remove price lines \n            deletePriceChart()\n            return;\n        }\n        var orderType = calcTabInfo.orderType;\n        var stopLoss = calcTabInfo.stopLoss;\n        var takeProfit = calcTabInfo.takeProfit;\n        var takeProfit = calcTabInfo.takeProfit;\n        var price = calcTabInfo.price;\n        var positionType = calcTabInfo.positionType;\n        var checkBox = calcTabInfo.checkBox;\n\n        if (orderType === 'marketOrder') {\n            updatePriceChart(getLivePrice.current, stopLoss, takeProfit, positionType, checkBox)\n            return\n        } else if (orderType === 'limitOrder') {\n            updatePriceChart(price, stopLoss, takeProfit, positionType, checkBox)\n\n        }\n\n\n    }, [calcTabInfo])\n\n    //display all trades\n    useEffect(() => {\n\n        if (allTrades === null) return\n        var markers = [];\n        allTrades.map((trade) => {\n            // console.log(typeof(trade.date))\n            // console.log(trade.date)\n            if (trade.cryptoCoin !== cryptoCoin) return;\n            markers.push({\n                time: trade.date / 1000,\n                position: (trade.posType === 'short') ? 'aboveBar' : 'belowBar',\n                color: (trade.posType === 'short') ? '#e91e63' : '#008000',\n                shape: (trade.posType === 'short') ? 'arrowDown' : 'arrowUp',\n                text: (trade.posType === 'short') ? 'Sell' : 'Buy'\n            })\n        })\n        newSeries.current.setMarkers(markers);\n\n    }, [allTrades, cryptoCoin])\n\n    const TopInfoContainer = useCallback(() => {\n\n        const [cryptoInfo, updateCryptoInfo] = useState([])\n        useEffect(() => {\n\n            //Set extra info\n            function setTimerInfo() {\n                //pass coin info to api\n                GetCryptoInfo(cryptoCoin).then(resp => {\n                    var priceChangePercent = parseFloat(resp.data.priceChangePercent).toFixed(2)\n                    var lowPrice = parseFloat(resp.data.lowPrice).toFixed(2)\n                    var openPrice = parseFloat(resp.data.openPrice).toFixed(2)\n\n                    const cryptoInfoLocal = [priceChangePercent, lowPrice, openPrice]\n                    updateCryptoInfo(cryptoInfoLocal)\n\n\n                })\n            }\n            //run once on load \n            setTimerInfo()\n            //stat timer \n            var getInfoInterval = setInterval(setTimerInfo, 2000)\n            return () => {\n                clearInterval(getInfoInterval)\n            }\n        }, [cryptoCoin])\n\n        return (\n            <>\n                <div>\n                    24h Percent Change<br />\n                    <p style={cryptoInfo[0] > 0 ? { color: 'green' } : { color: 'red' }}>{cryptoInfo[0]}</p>\n\n                </div>\n                <div>\n\n                    24h Low<br />\n                    {cryptoInfo[1]}\n                </div>\n            </>\n        )\n    }, [cryptoCoin])\n    return (\n        <>\n\n            <div className=\"delete\" style={{ position: 'absolute', top: '0' }}>\n                {/* {\n                timeFrames.map((timeFrame)=>{\n                    //console.log(timeFrame)\n                })\n                } */}\n\n            </div>\n            <div className=\"chartTab_info\">\n                {/* this is updated every 2 seconds hence its a user defined component  */}\n                <TopInfoContainer />\n\n\n                <div className=\"chartTab_timerDropDown\">\n                    Time Frame\n                    <br />\n                    {currentTimeFrame}\n                    <div className=\"chartTab_timerDropDown-content\">\n                        {\n                            timeFrames.map((timeFrame, index) => {\n                                return (<p className='chartTab_timerDropDown-content-button' key={index} >\n                                    <button onClick={() => { updateTimeFrame(timeFrame) }}>{timeFrame}</button>\n                                    <br />\n                                </p>)\n\n                            })\n                        }\n                    </div>\n                    <i className=\"fa-solid fa-angle-up\"></i>\n                </div>\n\n            </div>\n\n            <div className=\"chartTab_outer\" >\n\n                <div className=\"chartTab_container\">\n\n                    <div ref={chartContainerRef} style={{\n                        'width': '100%',\n                        'height': '100%'\n                    }}>\n                    </div>\n                </div>\n\n            </div>\n\n        </>\n    )\n\n}\n\n","\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: true,\n}\n\n const chartClickedSlice = createSlice({\n  name: 'chartClicked',\n  initialState,\n  reducers: {\n    displayChart: (state,action) => {\n      \n      state.value = action.payload\n    },\n\n  },\n})\n\n\n// Action creators are generated for each case reducer function\nexport const { displayChart } = chartClickedSlice.actions\n\nexport default chartClickedSlice.reducer\n","import React, { useState, useEffect } from \"react\";\nimport './SignOut.css';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { signOut } from \"firebase/auth\"\nimport { auth } from \"../Firebase/Firebase\";\nimport { useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\n//render both and show only the real one using user info \n\nexport const SignOut = (props) => {\n\n\n    const userEmail = useSelector((state) => state.userData.value)\n    var currentUserEmail = useRef();\n    var displayLogin = props.display.displayLogin\n    var updateDisplayLogin = props.display.updateDisplayLogin\n\n    //fuunction to sign out using firebase \n    const firebase_signOut = () => {\n\n        signOut(auth).then(() => {\n\n            // Sign-out successful.(so remove signout display)\n            updateDisplayLogin(false)\n        }).catch((error) => {\n\n        });\n    }\n\n        useEffect(() => {\n            currentUserEmail.current = userEmail\n        }, [userEmail])\n\n        return displayLogin && userEmail!==null?(\n            <div className=\"signOut_outer\">\n\n                <div className=\"signOut_innerbox\">\n\n                    <div className=\"signOut_logo\">\n                        <h1> My Account </h1>\n                    </div>\n                    <div className=\"login_line\">\n\n                    </div>\n                    <div className=\"signOut_icon\">\n\n                        <i className=\"fa-solid fa-dragon fa-4x\"></i>\n                    </div>\n                    <div className=\"signOut_email\">\n                        You are currenly signed in with this email address\n                        <br />\n                        <br />\n                        {userEmail}\n\n                    </div>\n\n                    <div className=\"signOut_login\">\n\n                        Sign Out?<Link to='/create_account' className='login_login_link' onClick={firebase_signOut}> here</Link>\n                    </div>\n                <i onClick={()=>updateDisplayLogin(false)} className=\"fa-solid fa-location-crosshairs fa-2x\"></i>\n                </div>\n\n\n            </div>\n        ):''\n    }","import React, { useRef } from \"react\";\nimport { auth } from '../Firebase/Firebase'\nimport { GoogleAuthProvider, signInWithPopup, GithubAuthProvider, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport './LoginModal.css'; //made easier for modal \nimport { Link } from \"react-router-dom\";\nexport const Login = (props) => {\n\n    const [email, updateEmail] = useState();\n    const [password, updatePassword] = useState();\n    const [error, updateError] = useState('');\n    const userEmail = useSelector((state) => state.userData.value)\n\n    var displayLogin = props.display.displayLogin\n    var updateDisplayLogin = props.display.updateDisplayLogin\n\n\n\n    function handleEmail(e) {\n\n        updateEmail(e.target.value);\n    }\n    function handlePassword(e) {\n        updatePassword(e.target.value);\n    }\n\n    const handleaccount = (e) => {\n        e.preventDefault()\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                // Signed in \n                const user = userCredential.user;\n                // ...\n                updateDisplayLogin(false)\n                updateError('')\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                updateError(errorCode);\n            });\n\n    }\n    function handleFacebook() {\n        const provider = new GoogleAuthProvider();\n\n        signInWithPopup(auth, provider)\n            .then((result) => {\n                // This gives you a Google Access Token. You can use it to access the Google API.\n                const credential = GoogleAuthProvider.credentialFromResult(result);\n                const token = credential.accessToken;\n                // The signed-in user info.\n                const user = result.user;\n\n                if (result) {\n                    //removes login pop up\n                    updateDisplayLogin(false)\n                }\n                // ...\n            }).catch((error) => {\n                console.log(error)\n                // Handle Errors here.\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                // The email of the user's account used.\n                const email = error.customData.email;\n                // The AuthCredential type that was used.\n                const credential = GoogleAuthProvider.credentialFromError(error);\n                console.log(error)\n                // ...\n            });\n    }\n\n    function handleGithub() {\n        const provider = new GithubAuthProvider();\n\n        signInWithPopup(auth, provider)\n            .then((result) => {\n                // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n                const credential = GithubAuthProvider.credentialFromResult(result);\n                const token = credential.accessToken;\n                console.log(result)\n                // The signed-in user info.\n                const user = result.user;\n                if (result) {\n                    //removes login pop up\n                    updateDisplayLogin(false)\n                }\n                // ...\n            }).catch((error) => {\n                console.log(error)\n                // Handle Errors here.\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                // The email of the user's account used.\n                const email = error.customData.email;\n                // The AuthCredential type that was used.\n                const credential = GithubAuthProvider.credentialFromError(error);\n                // ...\n            });\n\n    }\n    return (displayLogin && userEmail === null) ? (\n        <div className=\"login_outer\">\n\n            <div className=\"login_innerbox\">\n\n\n                <div className=\"login_logo\">\n                    <h1>Log in </h1>\n                </div>\n\n\n                <div className=\"login_signupUsing\">\n                    <p>Log in using :</p>\n                </div>\n\n\n                <div className=\"login_signupOptions\">\n\n\n                    <i onClick={handleGithub} className=\"fa-brands fa-github fa-2x\"></i>\n\n                    <i onClick={handleFacebook} className=\"fa-brands fa-google fa-2x\"></i>\n\n\n                </div>\n                <div className=\"login_or\">\n\n                    <p>or sign in:</p>\n                </div>\n\n                <form onSubmit={handleaccount}>\n\n                    <div className=\"login_input\">\n\n                        <div className=\"login_error\">\n                            {error}\n\n                        </div>\n\n                        <input type=\"email\" className=\"login_email\" placeholder=\"Email\" value={email} onChange={handleEmail} required />\n\n\n                        <input type=\"text\" className=\"login_password\" placeholder=\"Password\" value={password} onChange={handlePassword} required />\n                    </div>\n\n\n\n\n                    <div className=\"login_signup\">\n                        <button type='submit' className=\"login_button\">Log in </button>\n                    </div>\n\n\n                </form>\n\n                <div className=\"login_login\">\n                    Create account?<Link to='/create_account' className='login_login_link'> click here</Link>\n                </div>\n                <i onClick={() => updateDisplayLogin(false)} className=\"fa-solid fa-location-crosshairs fa-2x\"></i>\n\n            </div>\n        </div>\n\n\n    ) : ' '\n\n}","import React, { Component, useEffect, useRef } from 'react';\n\nimport './Navbar.css'\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { displayChart } from '../Storage/Chartclicked_data'\nimport { SignOut } from './SignOut';\nimport { Login } from './Login.js'\n\nfunction Navbar() {\n    \n    var loginButton = useRef();\n    const dispatch = useDispatch();\n    const chartClick = useSelector((state) => state.chartClicked.value)\n    const userEmail = useSelector((state) => state.userData.value)\n\n    const [menuClick, updateMenuClick] = useState(false)\n    const [settingClick, updateSettingclick] = useState(false)\n\n    const [displayLogin, updateDisplayLogin] = useState(false)\n    \n\n\n    const menuClicked = () => {\n        // this.setState({menuClicked:!this.state.menuClicked}) \n        updateMenuClick(!menuClick)\n\n    }\n    const settingClicked = () => {\n        // this.setState({settingClicked:!this.state.settingClicked})\n        updateSettingclick(!settingClick)\n    }\n\n    const Value = [\n\n        {\n            title: 'Portfolio Tracker (Coming Soon)',\n            url: 'google.com',\n            cName: 'nav-links'\n        }\n    ]\n\n    return (\n        \n        <nav className=\"NavbarItems\">\n\n            <div className='menu-icon container' onClick={menuClicked}>\n                <div className='menu-icon' >\n                    <i className={menuClick ? 'fas fa-times' : 'fas fa-bars'}></i>\n                </div>\n\n            </div>\n\n            {/* <div className='menu-icon container' onClick={this.settingClicked}>\n                    <div className='menu-icon'>\n                    <i className={'fa-solid fa-gear'} ></i>\n                    </div>\n                    \n                </div> */}\n\n            <div className='menu-icon container' onClick={() => dispatch(displayChart(!chartClick))}>\n                <div className='menu-icon'>\n\n                    <i className={chartClick ? 'fa-solid fa-toggle-on' : 'fa-solid fa-toggle-off'} ></i>\n                </div>\n            </div>\n\n         \n\n\n\n\n            <div className='menu-icon container' id='userLoginButton' onClick={()=>updateDisplayLogin(!displayLogin)}>\n\n                <div className='menu-icon' id='login-menu-icon'>\n                    {/* shows sign in or out according to user info(taken from redux store) */}\n                    <label className='fontm'>{userEmail ? 'Sign Out' : 'Sign In'}</label>\n                    <i className={userEmail ? 'fa-solid fa-user-check' : 'fa-solid fa-user-xmark'}></i>\n                    {/* <i class={\"fa-solid \" + 'fa-user-xmark'}></i> */}\n                </div>\n\n            </div>\n     \n\n            {\n                //if user is logged in dont shpw log in page, if hes logged in show sign out  \n               <Login display = {{displayLogin,updateDisplayLogin}}/>         \n            }\n\n            {\n                <SignOut display = {{displayLogin,updateDisplayLogin}}/>\n            }\n\n            <ul className={menuClick ? 'nav-menu active' : 'nav-menu'}>\n                {Value.map((item, index) => {\n                    return (\n                        <li key={index}>\n                            <a className={item.cName} href={item.url}>\n                                {item.title}\n                            </a>\n                        </li>\n                    )\n                })}\n            </ul>\n\n        </nav>\n    )\n\n}\nexport default Navbar;","import React, { Component } from 'react'\nimport './Footer.css'\nexport function Footer(){\n\n    return(\n        <div className=\"footer\">\n            <div className=\"footerInfo\">\n                <p>v4 - Hamz raise an issue  <a href=\"https://github.com/Hamz-06/crypto-position-calculator\"> here </a></p>\n\n            </div>\n        </div>\n    )\n}\n","import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: null,\n}\n\n const allTradesSlice = createSlice({\n  name: 'allTrades',\n  initialState,\n  reducers: {\n    setAllTrades: (state,action) => {\n      \n      state.value = action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setAllTrades } = allTradesSlice.actions\n\nexport default allTradesSlice.reducer\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\nimport \"./TradeTrackerPrev.css\";\nimport { displayTradeDataBase } from \"../Firebase/Firebase_user_info\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useRef } from \"react\";\nimport {\n  addTradeDatabase,\n  fetchTradeDataBase,\n} from \"../Firebase/Firebase_user_info\";\nimport { cryptoCoins, getCryptoImage, unixToDate } from \"../ApiReq/PriceData\";\nimport { useSpring, animated, useTransition } from \"react-spring\";\nimport { Link } from \"react-router-dom\";\nimport { setAllTrades } from \"../Storage/AllTrades\";\nexport function TradeTracker() {\n  const userId = useSelector((state) => state.userId.value);\n  const fetchTrade = useSelector((state) => state.newTrade.value);\n  const [oldTrades, updateOldTrades] = useState(null); //starts with null\n  const [newTrades, updateNewTrades] = useState([]);\n  const dispatch = useDispatch();\n\n  //redux - send old + new trades to redux storage\n  useEffect(() => {\n    if (oldTrades === null) return;\n\n    const allTrades = oldTrades.concat(newTrades);\n    dispatch(setAllTrades(allTrades));\n  }, [oldTrades, newTrades]);\n\n  //delete trade\n  function deleteTrade(index, date, userId, array, updateArray) {\n    const newArray = array.filter((_, i) => index !== i);\n    // console.log(oldTrades,newArray)\n    // console.log(oldTrades.length, newArray.length)\n    fetchTradeDataBase(date, userId);\n    updateArray(newArray);\n  }\n\n  //used to fetch old trades\n  useEffect(() => {\n    if (!userId) return;\n\n    //fetches trade from firebase database\n    displayTradeDataBase(userId)\n      .then((res) => {\n        updateOldTrades(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [userId]);\n  //used to fetcch new trades\n  useEffect(() => {\n    //fetch trade starts at null\n    \n    if (!fetchTrade) return;\n    // addTradeDatabase(fetchTrade, userId);\n    console.log(fetchTrade);\n    var newTrradesArr = []\n    newTrradesArr=[fetchTrade,...newTrades]\n    console.log(newTrradesArr)\n    updateNewTrades(newTrradesArr);\n  }, [fetchTrade]);\n\n  //display old trade\n  const DisplayOldTrades = () => {\n    const tradeTrackAnim = useSpring({\n      to: { opacity: 1, x: 0, y: 0 },\n      from: { opacity: 0, x: 200, y: 0 },\n    });\n    //if there is data inside old trades\n    if (!oldTrades) return;\n    return oldTrades.map((trade, key) => {\n      //gets logo of symbol\n      var symbolLogo = getCryptoImage(trade.cryptoCoin);\n\n      //get date and time -> 21/07/2022, 01:03:50 --- splice comma\n      const dateAndTime = unixToDate(trade.date);\n      const arrayDate = dateAndTime.split(\",\");\n      return (\n        <animated.tr key={key} style={tradeTrackAnim}>\n          <td>\n            {arrayDate[0]}\n            <br />\n            {arrayDate[1]}\n          </td>\n          <td>\n            <div>\n              {trade.cryptoCoin}\n              <img src={symbolLogo} alt=\"alternatetext\"></img>\n            </div>\n          </td>\n          <td>{trade.entryPrice}</td>\n          <td>{trade.posType}</td>\n          {/* used to delete the trade */}\n          <td>\n            <i\n              onClick={() =>\n                deleteTrade(key, trade.date, userId, oldTrades, updateOldTrades)\n              }\n              className=\"fa-solid fa-trash-can\"></i>\n          </td>\n        </animated.tr>\n      );\n    });\n  };\n\n  //display new trades\n  const DisplayNewTrades = () => {\n    const tradeTrackAnim = useSpring({\n      to: { opacity: 1, x: 0, y: 0 },\n      from: { opacity: 0, x: 200, y: 0 },\n    });\n\n    if (!userId) return;\n    return newTrades.map((trade, key) => {\n      //get date and time -> 21/07/2022, 01:03:50 --- splice comma\n      const dateAndTime = unixToDate(trade.date);\n      const arrayDate = dateAndTime.split(\",\");\n\n      return (\n        <animated.tr key={key} style={tradeTrackAnim}>\n          <td>\n            {arrayDate[0]}\n            <br />\n            {arrayDate[1]}\n          </td>\n          <td>\n            <div>\n              {trade.cryptoCoin}\n              <img src={trade.cryptoImage} alt=\"alternatetext\"></img>\n            </div>\n          </td>\n          <td>{trade.entryPrice}</td>\n          <td>{trade.posType}</td>\n          <td>\n            <i\n              onClick={() =>\n                deleteTrade(key, trade.date, userId, newTrades, updateNewTrades)\n              }\n              className=\"fa-solid fa-trash-can\"></i>\n          </td>\n        </animated.tr>\n      );\n    });\n  };\n\n  return (\n    <>\n      <div className=\"tracker_table_container\">\n        {\n          //if user not logged in display lock\n          !userId ? <p className=\"signInPrompt\">Please sign in</p> : \"\"\n        }\n        <div className=\"tracker_table\">\n          <table>\n            {/* header for table */}\n            <thead>\n              <tr>\n                <th>Trade Taken</th>\n                <th>Symbol</th>\n                <th>Entry Price</th>\n                <th>Long/Short</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n\n            {/* table body */}\n\n            <tbody>\n              {\n                // user needs to be logged in for this to load\n                <DisplayNewTrades />\n              }\n              {\n                // user needs to be logged in for this to load\n                <DisplayOldTrades />\n              }\n            </tbody>\n          </table>\n        </div>\n\n        <a\n          href=\"https://hamz-06.github.io/crypto-position-calculator/#/view_trades&potfolio\"\n          className=\"tracker_moreInfo_icon\"\n          target=\"_blank\">\n          <i className=\"fa-solid fa-pen-to-square\"></i>\n        </a>\n        {/* <div className=\"tracker_moreInfo\">\n                <i className=\"fa-solid fa-info\"></i>  Coming Out Soon\n            </div> */}\n      </div>\n    </>\n  );\n}\n","import { CalculatorTab } from '../Calc/CalculatorTab.jsx';\nimport { ChartTab } from '../chart/ChartTab.jsx';\nimport React, { } from 'react';\nimport Navbar from '../Navbar/Navbar'\nimport { Footer } from '../Footer/Footer.jsx';\nimport './HomePage.css';\nimport { useSelector } from 'react-redux'\nimport { TradeTracker } from '../tradetracker/TradeTrackerPrev.jsx'\nimport { useSpring, animated, useTransition } from 'react-spring'\nimport { display, style } from '@mui/system';\nexport function Homepage() {\n\n  const chartClicked = useSelector((state) => state.chartClicked.value)\n\n\n  const chartRemoveAnim = useTransition(chartClicked, {\n\n    from: {\n      x: 0, y: -300, opacity: 0,\n    },\n    enter: {\n      x: 0, y: 0, opacity: 1,\n    },\n\n  })\n  const chartRemoveDefaultAnim = (x) => {\n    return (x) ? { display: 'block' } : { display: 'none' }\n  }\n\n  const calculatorAnim = useSpring({ to: { opacity: 1, y: 0 }, from: { opacity: 0, y: 300 } })\n  return (\n    <>\n      <Navbar />\n      {/* entire screen outer */}\n      <div className=\"homePage_outer\">\n        {/* home page row splits into two with a aspect ratio of 1 to 2  */}\n        <div className=\"homePage_row\">\n\n          <animated.div className=\"homePage_cal_tab\" style={calculatorAnim}>\n            <CalculatorTab />\n          </animated.div>\n\n\n          {chartRemoveAnim((style, item) =>\n            <animated.div className=\"homePage_second_tab\" style={{\n              ...style,\n              ...chartRemoveDefaultAnim(item)\n            }}>\n              <div className=\"homePage_second_tab_chart\">\n                <ChartTab />\n              </div>\n              <div className=\"homePage_second_tab_tracker\">\n                <TradeTracker />\n              </div>\n            </animated.div>\n          )}\n\n        </div>\n\n      </div>\n      <Footer />\n\n\n    </>\n  )\n\n}\n","import React, { useState, } from \"react\"\nimport { useNavigate } from \"react-router-dom\";\nimport './CreateAccountPage.css'\nimport { Footer } from \"../Footer/Footer\";\nimport { auth } from \"../Firebase/Firebase\";\nimport { createUserWithEmailAndPassword,GoogleAuthProvider,signInWithPopup,GithubAuthProvider } from \"firebase/auth\";\nimport { Link } from \"react-router-dom\";\nexport function CreateAccountPage() {\n\n\n\n    const [email, updateEmail] = useState('');\n    const [password, updatePassword] = useState('');\n    const [error, updateError] = useState('');\n    //redirect when login \n    const usenavigate = useNavigate();\n\n\n    function handleFacebook(){  \n        const provider = new GoogleAuthProvider();\n\n        signInWithPopup(auth, provider)\n        .then((result) => {\n          // This gives you a Google Access Token. You can use it to access the Google API.\n          const credential = GoogleAuthProvider.credentialFromResult(result);\n          const token = credential.accessToken;\n          // The signed-in user info.\n          const user = result.user;\n      \n          if(result){\n            usenavigate('/')\n          }\n          // ...\n        }).catch((error) => {\n            console.log(error)\n          // Handle Errors here.\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          // The email of the user's account used.\n          const email = error.customData.email;\n          // The AuthCredential type that was used.\n          const credential = GoogleAuthProvider.credentialFromError(error);\n          console.log(error)\n          // ...\n        });\n    }\n\n    function handleGithub(){\n        const provider = new GithubAuthProvider();\n\n        signInWithPopup(auth, provider)\n        .then((result) => {\n          // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n          const credential = GithubAuthProvider.credentialFromResult(result);\n          const token = credential.accessToken;\n      \n          // The signed-in user info.\n          const user = result.user;\n          if(result){\n            usenavigate('/')\n          }\n          // ...\n        }).catch((error) => {\n          // Handle Errors here.\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          // The email of the user's account used.\n          const email = error.customData.email;\n          // The AuthCredential type that was used.\n          const credential = GithubAuthProvider.credentialFromError(error);\n          // ...\n        });\n      \n    }\n    \n    function handleaccount(event) {\n        event.preventDefault();\n\n        createUserWithEmailAndPassword(auth, email, password)\n            .then((auth) => {\n                console.log(auth)\n                if(auth){\n                    usenavigate('/')\n                }\n              \n            })\n\n            .catch((error) => {\n          \n                updateError(error.code)\n\n            })\n    }\n    function handleEmail(e){\n    \n        updateEmail(e.target.value);\n    }\n    function handlePassword(e){\n        updatePassword(e.target.value);\n    }\n    return (\n        <>\n        \n        \n        <div className=\"createAccount_outer\">\n\n            <div className=\"createAccount_innerbox\">\n\n\n                <div className=\"createAccount_logo\">\n                    <h1>Create Account</h1>\n                    \n                </div>\n\n\n                <div className=\"createAccount_signupUsing\">\n                    <p>Create Account using :</p>\n                </div>\n\n                <div className=\"createAccount_signupOptions\">\n\n\n                    <i onClick={handleGithub} className=\"fa-brands fa-github fa-2x\"></i>\n                    \n                    <i onClick={handleFacebook} className=\"fa-brands fa-google fa-2x\"></i>\n\n\n                </div>\n                <div className=\"createAccount_or\">\n\n                    <p>or :</p>\n                </div>\n\n                <form onSubmit={handleaccount}>\n                    <div className=\"createAccount_input\">\n\n                        <div className=\"createAccount_error\">\n                            {error}\n                        </div>\n                        <input type=\"email\" className=\"createAccount_email\" placeholder=\"Email\" value={email} onChange={ handleEmail } required />\n\n\n                        <input type=\"text\" className=\"createAccount_password\" placeholder=\"Password\" value={password} onChange={handlePassword} required />\n                    </div>\n\n\n            \n\n                    <div className=\"createAccount_signup\">\n                        <button type='submit' className=\"createAccount_button\" > Create Account </button>\n                    </div>\n\n\n                </form>\n\n                <div className=\"createAccount_login\">\n                    have an account?<Link to='/' className='createAccount_login_link'> log in</Link>\n                </div>\n\n            </div>\n        </div>\n        <Footer/>\n        </>\n    )\n}\n\n\n\n/*           \n <div className=\"caccount_container\">\n\n                <div>\n\n                    <h1 className='caccount_label'>Create Account</h1>\n                </div>\n\n                <form>\n\n                    <div className=\"caccount_input\">\n\n                        <label className='caccount_label'>Email</label>\n                        <input type=\"text\"\n                            className=\"caccount_userName_input\"\n                            value={email}\n                            onChange={(e) => {\n                                updateEmail(e.target.value)\n                                \n                            }}\n\n                        />\n\n                    </div>\n                    <div className=\"caccount_input\">\n                        <label\n                            className='caccount_label'>Password</label>\n                        <input type=\"text\"\n                            className=\"caccount_userName_input\"\n                            \n                            value={password}\n                        \n                            onChange={(e) => {\n\n                                updatePassword(e.target.value)\n                                \n                            }}\n                        />\n                    </div>\n                </form>\n                <div className='caccount_btn'>\n\n                    <button type='submit' className='caccount_btn_submit' onClick={handleaccount}>Create Account </button>\n                </div>\n                <a href='/' className='sign_up'>go back</a>\n\n            </div> \n*/","\nimport { createSlice } from '@reduxjs/toolkit';\nimport { useEffect } from 'react';\n\nconst initialState = {\n  value: null,\n}\n\n const userDataSlice = createSlice({\n  name: 'userData',\n  initialState,\n  reducers: {\n    setUserData: (state,action) => {\n      \n      state.value = action.payload\n     \n      \n    },\n\n  },\n})\n\n\n\n\n\n// Action creators are generated for each case reducer function\nexport const { setUserData } = userDataSlice.actions\n\nexport default userDataSlice.reducer\n","\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  value: null,\n}\n\n const userIdSlice = createSlice({\n  name: 'userId',\n  initialState,\n  reducers: {\n    setUserId: (state,action) => {\n  \n      state.value = action.payload\n           \n    },\n\n  },\n})\n\n\n// Action creators are generated for each case reducer function\nexport const { setUserId } = userIdSlice.actions\n\nexport default userIdSlice.reducer\n","import React from \"react\";\nimport './ViewTrades_Port.css';\n\nexport const ViewTrades_Port=()=>{\n\n    return<div className=\"ViewTrades_Port_outer\">Coming soon</div>\n}","\nimport './App.css';\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Homepage } from './Components/Pages/Homepage.jsx';\nimport { auth } from './Components/Firebase/Firebase';\nimport { onAuthStateChanged } from \"firebase/auth\";\n\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom'\nimport { CreateAccountPage } from './Components/Pages/CreateAccountPage.jsx'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setUserData } from './Components/Storage/UserEmail'\nimport {createUserDataBase} from '../src/Components/Firebase/Firebase_user_info'\nimport {setUserId} from './Components/Storage/UserId'\nimport {ViewTrades_Port} from './Components/Pages/ViewTades_Port'\nfunction App() {\n\n  const dispatch = useDispatch();\n  \n  const [load, updateLoad] = useState(false)\n\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, (user) => {\n  \n      if (user) {\n       \n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        const uid = user.uid;\n        dispatch(setUserData(user.email))\n        dispatch(setUserId(uid))\n        createUserDataBase(uid)\n\n        // ...\n      } else {\n        // User is signed out\n        // ...\n        dispatch(setUserData(null))\n        dispatch(setUserId(null))\n      }\n    });\n    updateLoad(true)\n    return unsub\n  }, [])\n\n  return (\n    <>\n      {/* prevents multiple refreshes due to redux user  */}\n      {load ?\n        (<Router basename=\"/\">\n          \n         \n          <Routes>\n\n            <Route exact path='/' element={\n              <Homepage />\n            } />\n\n            <Route path='/create_account' element={\n              <CreateAccountPage />\n            } />\n\n            <Route path='/view_trades&potfolio' element={\n              <ViewTrades_Port />\n            } />\n\n          </Routes>\n\n        </Router>\n        ) : null}\n\n\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport chartClickedReducer from './Chartclicked_data'\nimport userEmailReducer from './UserEmail'\nimport userIdSlicer from './UserId'\nimport newTradeSlice from './NewTrade'\nimport extraInfoSlice from './ExtraInfoFromChart'\nimport allTradesSlice from './AllTrades'\nimport paramClickSlice from './ParamClickChart'\nimport extraInfoCalctSlice from './ExtraInfroFromCalc'\nimport cryptoCoinSlice from './CryptoCoin'\n\nexport const Store = configureStore({\nreducer: {\n    chartClicked: chartClickedReducer,\n    userData: userEmailReducer,\n    userId:userIdSlicer,\n    newTrade:newTradeSlice,\n    extraInfo:extraInfoSlice,\n    allTrades:allTradesSlice,\n    paramClick:paramClickSlice,\n    calcInfo:extraInfoCalctSlice,\n    cryptoCoin:cryptoCoinSlice,\n\n  },\n})","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Store} from './Components/Storage/Storage';\nimport { Provider } from 'react-redux';\nimport {  onAuthStateChanged } from \"firebase/auth\";\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  // <React.StrictMode>\n  <Provider store={Store}>\n    <App />\n  </Provider>\n \n  /* </React.StrictMode> */\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}