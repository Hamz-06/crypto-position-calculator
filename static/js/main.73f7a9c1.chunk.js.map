{"version":3,"sources":["Components/ApiReq/PriceData.js","Components/Storage/NewTrade.js","Components/Storage/ExtraInfroFromCalc.js","Components/Storage/CryptoCoin.js","Components/Calc/CalculatorTab.jsx","Components/Storage/ExtraInfoFromChart.js","Components/Storage/ParamClickChart.js","Components/chart/ChartTab.jsx","Components/Storage/Chartclicked_data.js","Components/Firebase/Firebase.js","Components/Navbar/SignOut.js","Components/Navbar/Login.js","Components/Navbar/Navbar.js","Components/Footer/Footer.jsx","Components/Firebase/Firebase_user_info.js","Components/Storage/AllTrades.js","Components/tradetracker/TradeTrackerPrev.jsx","Components/Pages/Homepage.jsx","Components/Pages/CreateAccountPage.jsx","Components/Storage/UserEmail.js","Components/Storage/UserId.js","Components/Pages/ViewTades_Port.jsx","App.js","reportWebVitals.js","Components/Storage/Storage.js","index.js"],"names":["GetCryptoInfo","currentCoin","axios","get","cryptoCoins","cryptoName","cryptoImage","getCryptoImage","getCoin","find","crypto","unixToDate","unix","Date","toLocaleString","newTradeSlice","createSlice","name","initialState","value","reducers","setNewTrade","state","action","payload","actions","extraInfoCalctSlice","setCalcInfo","cryptoCoin","cryptoCoinSlice","setCoin","CalculatorTab","dispatch","useDispatch","_useState","useState","_useState2","Object","slicedToArray","stopLoss","updateStopLoss","_useState3","_useState4","takeProfit","updateTakeProfit","_useState5","_useState6","limitPrice","updateLimitPrice","_useState7","_useState8","positionType","setPosType","_useState9","_useState10","orderType","updateOrderType","_useState11","_useState12","filled","updateFill","_useState13","_useState14","checkBox","updateCheckBox","_useState15","_useState16","time","updateTime","paramChartClicked","useSelector","paramClick","handleOrderType","event","target","id","handlePosition","handleCheckBox","useEffect","marketOrderEmpty","price","date","colorStyleTime","input","border","backgroundColor","ButtonAddToPortfolio","infoChartTab","extraInfo","userEmail","userData","_useState17","_useState18","confirmAdd","updateConfirmAdd","_useState19","_useState20","displayNotLogged","updateDisplayNotLogged","react_default","a","createElement","Fragment","className","onClick","getTime","posType","entryPrice","addNewTrade","limitPriceEmpty","dateLimitPriceEmpty","console","log","handleAddToPortfolio","src","alt","map","coin","index","key","style","display","color","readOnly","placeholder","type","onChange","checked","extraInfoChartSlice","setExtraInfo","paramClickSlice","setParamClick","ChartTab","currentTimeFrame","updateTimeFrame","getLivePrice","useRef","chart","newSeries","chartContainerRef","purchasePrice","stopLossPrice","takeProfPrice","calcTabInfo","calcInfo","allTrades","_useTransition","useTransition","_useTransition2","startTransition","chartOptions","defineProperty","handleScale","axisPressedMouseMove","layout","textColor","grid","vertLines","horzLines","crosshair","mode","CrosshairMode","Normal","priceScale","borderColor","timeScale","width","current","clientWidth","height","clientHeight","timeVisible","secondVisible","createChart","fitContent","addCandlestickSeries","subscribeClick","param","point","coordinateToPrice","y","toFixed","Number","isNaN","resizeO","ResizeObserver","applyOptions","observe","disconnect","conn","WebSocket","toLowerCase","GetLiveCandle","onmessage","liveData","JSON","parse","data","editLiveData","k","t","open","o","high","h","low","l","close","c","update","GetCandles","then","Resp","candles","d","candleLen","length","setData","updatePosPriceChart","stopOrTake","percentChange","getTp","getSl","updatePriceChart","priceLocal","stopLossLocal","takeProfitLocal","createPriceLine","title","lineWidth","lineStyle","axisLabelVisible","lineVisible","takeProfitUsd","parseFloat","stopLossUsd","removePriceLine","markers","trade","push","position","shape","text","setMarkers","TopInfoContainer","useCallback","cryptoInfo","updateCryptoInfo","setTimerInfo","resp","priceChangePercent","lowPrice","openPrice","getInfoInterval","setInterval","clearInterval","top","timeFrame","ref","chartClickedSlice","displayChart","firebaseConfig","apiKey","concat","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","db","getFirestore","auth","getAuth","getAnalytics","SignOut","props","currentUserEmail","displayLogin","updateDisplayLogin","href","signOut","catch","error","Login","email","updateEmail","password","updatePassword","updateError","provider","GithubAuthProvider","signInWithPopup","result","credentialFromResult","accessToken","user","code","message","customData","credentialFromError","GoogleAuthProvider","onSubmit","e","preventDefault","signInWithEmailAndPassword","userCredential","errorCode","required","react_router_dom","to","Navbar","chartClick","chartClicked","menuClick","updateMenuClick","Login_Login","SignOut_SignOut","url","cName","item","Footer","createUserDataBase","_ref","asyncToGenerator","regenerator_default","mark","_callee","userId","getUserRef","wrap","_context","prev","next","doc","getDoc","sent","exists","setDoc","stop","_x","apply","this","arguments","displayTradeDataBase","_ref2","_callee2","trades","getUserCollRef","_context2","collection","getDocs","forEach","tradeId","sort","b","abrupt","_x2","addTradeDatabase","_ref3","_callee3","tradeInfo","uniqueId","_context3","addDoc","_x3","_x4","fetchTradeDataBase","_ref4","_callee4","tradeDate","userColl","docId","_context4","query","where","deleteDoc","_x5","_x6","allTradesSlice","setAllTrades","TradeTracker","fetchTrade","newTrade","oldTrades","updateOldTrades","newTrades","updateNewTrades","deleteTrade","array","updateArray","newArray","filter","_","i","res","err","toConsumableArray","DisplayOldTrades","tradeTrackAnim","useSpring","opacity","x","from","symbolLogo","arrayDate","split","react_spring_esm","tr","DisplayNewTrades","Homepage","chartRemoveAnim","enter","calculatorAnim","Components_Navbar_Navbar","div","CalculatorTab_CalculatorTab","objectSpread","ChartTab_ChartTab","Footer_Footer","CreateAccountPage","usenavigate","useNavigate","createUserWithEmailAndPassword","userDataSlice","setUserData","userIdSlice","setUserId","ViewTrades_Port","App","load","updateLoad","unsub","onAuthStateChanged","uid","basename","react_router","exact","path","element","CreateAccountPage_CreateAccountPage","ViewTades_Port_ViewTrades_Port","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","Store","configureStore","reducer","chartClickedReducer","userEmailReducer","userIdSlicer","extraInfoSlice","ReactDOM","createRoot","document","getElementById","render","es","store","src_App"],"mappings":"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","file":"static/js/main.73f7a9c1.chunk.js","sourcesContent":["\nimport axios from \"axios\";\n\n//gets 500 candle sticks \nexport const GetCandles=(currentTimeFrame,currentCoin)=>{\n\n  \n  return axios.get('https://api.binance.com/api/v3/klines?symbol='+currentCoin+'&interval='+currentTimeFrame+'&limit=1000')\n  \n}\n\n//gets 24 hour percent change and crypto info\nexport const GetCryptoInfo=(currentCoin)=>{\n  return axios.get('https://api.binance.com/api/v3/ticker?symbol='+currentCoin)\n}\n//gets current candle stick info from binance \nexport const GetLiveCandle = (currentTimeFrame, currentCoin)=>{\n\n  var symbol_LowerCase = currentCoin\n  var symbol_LowerCase = symbol_LowerCase.toLowerCase()\n  return 'wss://stream.binance.com:9443/ws/'+symbol_LowerCase+'@kline_'+currentTimeFrame\n}\n\n//gets current bitcoin price \n// export const GetCurrentPrice = ()=>{\n//   return axios.get('https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT')\n// }\n\n//get coins \nexport const cryptoCoins = [\n  {\n    cryptoName:'BTCUSDT',\n    cryptoImage:'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png'\n  },{\n    cryptoName:'ETHUSDT',\n    cryptoImage:'https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png'\n\n  },{\n    cryptoName:'SOLUSDT',\n    cryptoImage:'https://s2.coinmarketcap.com/static/img/coins/64x64/2010.png'\n  },{\n    cryptoName:'DOTUSDT',\n    cryptoImage:'https://s2.coinmarketcap.com/static/img/coins/64x64/6636.png'\n  },{\n    cryptoName:'AVAXUSDT',\n    cryptoImage:'https://s2.coinmarketcap.com/static/img/coins/64x64/5805.png'\n  }\n\n]\n\n//incorrect function\nexport const getCryptoImage=(getCoin)=>{\n\n  var coin=cryptoCoins.find((crypto)=>{\n      return crypto.cryptoName === getCoin\n  })\n  // console.log(coin.cryptoImage)\n  return coin.cryptoImage\n  \n}\n\nexport const unixToDate=(unix)=>{\n  const milliseconds = unix \n  const dateObject = new Date(milliseconds)\n  const humanDateFormat = dateObject.toLocaleString()\n  return humanDateFormat\n}\n\n\n","\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: null,\n}\n\n const newTradeSlice = createSlice({\n  name: 'tradeInfo',\n  initialState,\n  reducers: {\n    setNewTrade: (state,action) => {\n      \n      state.value = action.payload\n    },\n\n  },\n})\n\n\n// Action creators are generated for each case reducer function\nexport const { setNewTrade } = newTradeSlice.actions\n\nexport default newTradeSlice.reducer\n","\n// data used to pass from chart -> calc\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: null,\n}\n\n const extraInfoCalctSlice = createSlice({\n  name: 'extraInfoCalc',\n  initialState,\n  reducers: {\n    setCalcInfo: (state,action) => {\n      \n      state.value = action.payload\n      \n    },\n  },\n})\n\n\n// Action creators are generated for each case reducer function\nexport const { setCalcInfo } = extraInfoCalctSlice.actions\n\nexport default extraInfoCalctSlice.reducer\n","\nimport { createSlice } from '@reduxjs/toolkit';\nimport { cryptoCoins } from '../ApiReq/PriceData'\nconst initialState = {\n    value:{\n        cryptoCoin: cryptoCoins[0].cryptoName,\n        cryptoImage: cryptoCoins[0].cryptoImage\n    }\n}\n\n const cryptoCoinSlice = createSlice({\n  name: 'cryptoCoin',\n  initialState,\n  reducers: {\n    setCoin: (state,action) => {\n      \n      state.value = action.payload\n    },\n\n  },\n})\n\n\n// Action creators are generated for each case reducer function\nexport const { setCoin } = cryptoCoinSlice.actions\n\nexport default cryptoCoinSlice.reducer\n","import React, { useCallback, useRef } from \"react\"\nimport { useState } from 'react';\nimport './CalculatorTab.css'\nimport { cryptoCoins, getCryptoImage, unixToDate } from \"../ApiReq/PriceData\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setNewTrade } from '../Storage/NewTrade'\nimport { useEffect } from \"react\";\nimport { setCalcInfo } from '../Storage/ExtraInfroFromCalc'\nimport { update } from \"react-spring\";\nimport { margin, textAlign } from \"@mui/system\";\nimport { setCoin } from '../Storage/CryptoCoin'\n\n\nexport const CalculatorTab = () => {\n\n    const dispatch = useDispatch();\n\n    const [stopLoss, updateStopLoss] = useState('')\n    const [takeProfit, updateTakeProfit] = useState('')\n    const [limitPrice, updateLimitPrice] = useState('')\n    const [positionType, setPosType] = useState('long')\n    const [orderType, updateOrderType] = useState('marketOrder')\n    const [filled, updateFill] = useState(false)\n    const [checkBox, updateCheckBox] = useState(false)\n    const [time, updateTime] = useState(['', ''])\n\n    var paramChartClicked = useSelector(state => state.paramClick.value)\n    var currentCoin = useSelector(state => state.cryptoCoin.value)\n\n\n    //limit order or market\n    const handleOrderType = (event) => {\n\n        updateOrderType(event.target.id)\n\n    }\n    //long or short \n    const handlePosition = (event) => {\n\n        setPosType((event.target.value));\n\n    };\n    //handle checkbox - clear data when pressed\n    const handleCheckBox = () => {\n        updateCheckBox(!checkBox)\n        updateLimitPrice('')\n        updateStopLoss('')\n        updateTakeProfit('')\n        updateTime(['', ''])\n    }\n    //clear input when another chart is clicked \n    useEffect(() => {\n        updateLimitPrice('')\n        updateStopLoss('')\n        updateTakeProfit('')\n        updateTime(['', ''])\n    }, [currentCoin])\n\n    //send data to chart tab\n    useEffect(() => {\n        var limitPriceEmpty = (limitPrice === '' || stopLoss === '' || takeProfit === '')\n        var marketOrderEmpty = (stopLoss === '' || takeProfit === '')\n\n        if (limitPriceEmpty && orderType === 'limitOrder') {\n            dispatch(setCalcInfo(null));\n            return;\n        } else if (marketOrderEmpty && orderType === 'marketOrder') {\n            dispatch(setCalcInfo(null));\n            return;\n        }\n        if (orderType === 'marketOrder') {\n\n            dispatch(setCalcInfo({\n                orderType: orderType,\n                stopLoss: stopLoss,\n                takeProfit: takeProfit,\n                price: null,\n                positionType: positionType,\n                checkBox: false,\n\n            }))\n        } else if (orderType === 'limitOrder') {\n\n\n            dispatch(setCalcInfo({\n                orderType: orderType,\n                takeProfit: takeProfit,\n                stopLoss: stopLoss,\n                price: limitPrice,\n                positionType: positionType,\n                checkBox: checkBox,\n            })\n\n            )\n        }\n    }, [stopLoss, takeProfit, limitPrice, positionType, orderType, paramChartClicked, checkBox])\n\n    //when clicked on chart update input\n    useEffect(() => {\n        if (checkBox) {\n\n            updateLimitPrice(paramChartClicked.price)\n            var date = unixToDate(paramChartClicked.time)\n            updateTime([paramChartClicked.time, date])\n\n        }\n\n    }, [paramChartClicked])\n    //change time and limit order style\n    const colorStyleTime = (input) => {\n        return {\n\n            border: (filled && input === '') ? '1px solid red' : '1px solid black',\n            backgroundColor: (checkBox) ? '#9f9f9f' : '#ffffff'\n        }\n    }\n\n    const MarketOrderDiv = () => {\n        return (\n            <div className=\"calc_inputField_outer\">\n\n\n                <div className=\"calc_inputField\">\n                    {(checkBox) ? (<div className=\"calc_inputBox\">\n                        click on the chart where you would like to placed a trade !!\n                    </div>) : ''}\n\n\n                    {(checkBox) ? (\n\n                        <div className=\"calc_inputBox\" style={{ display: (orderType === 'limitOrder') ? 'block' : 'none' }}>\n                            <label className=\"calc_inputLabel\" style={{ color: time[0] === '' ? 'transparent' : 'black' }} >Time</label>\n                            <input\n                                style={colorStyleTime(time[0])}\n                                readOnly={true}\n\n                                className='calc_input'\n                                placeholder='Time'\n                                value={time[1]} />\n                        </div>\n                    ) : ''}\n\n                    <div className=\"calc_inputBox\" style={{ display: (orderType === 'limitOrder') ? 'block' : 'none' }}>\n                        <label className=\"calc_inputLabel\" style={{ color: limitPrice === '' ? 'transparent' : 'black' }} >Limit price</label>\n                        <input\n                            readOnly={checkBox}\n                            type=\"number\"\n                            onChange={(event) => { updateLimitPrice(event.target.value) }}\n                            className='calc_input'\n                            id=\"LimitPrice\"\n                            value={limitPrice}\n                            placeholder='Limit Price'\n                            style={colorStyleTime(limitPrice)} />\n                    </div>\n\n\n                    <div className=\"calc_inputBox\" >\n                        <label className=\"calc_inputLabel\" style={{ color: stopLoss === '' ? 'transparent' : 'black' }} >stop loss</label>\n                        <input type=\"number\" onChange={(event) => { updateStopLoss(event.target.value) }} className='calc_input' id=\"stopLossPercent\" value={stopLoss} placeholder='Stop Loss In Percent'\n                            style={(filled && stopLoss === '') ? { border: '1px solid red' } : { color: '1px solid black' }} />\n                    </div>\n\n\n                    <div className=\"calc_inputBox\" >\n                        <label className=\"calc_inputLabel\" style={{ color: takeProfit === '' ? 'transparent' : 'black' }}>take profit</label>\n                        {/* <label style={takeProfPercent.current===''?{display:'none'}:{display:'block'}}>take profit</label> */}\n                        <input type=\"number\" className='calc_input' onChange={(event) => { updateTakeProfit(event.target.value) }} id='takeProfPercent' value={takeProfit} placeholder='Take Profit In Percent'\n                            style={(filled && takeProfit === '') ? { border: '1px solid red' } : { color: '1px solid black' }} />\n                    </div>\n                    {(orderType === 'limitOrder') ? (\n\n                        <div className=\"calc_inputBox\">\n                            <label>Click on the Chart  </label>\n                            <input type=\"checkbox\" checked={checkBox} onChange={handleCheckBox} />\n                        </div>) : ''\n                    }\n\n                    <div className=\"calc_inputBox\">\n\n                        <div className=\"calc_radio\">\n                            <label>\n                                <a>Long </a>\n                                <input type=\"radio\" value=\"long\" className=\"calc_radio_check\" checked={positionType === 'long'} onChange={handlePosition} />\n                            </label>\n                        </div>\n                        <div className=\"calc_radio\">\n                            <label>\n                                <a>Short </a>\n                                <input type=\"radio\" value=\"short\" className=\"calc_radio_check\" checked={positionType === 'short'} onChange={handlePosition} />\n                            </label>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n\n        )\n    }\n\n\n    const ButtonAddToPortfolio = () => {\n        \n        //requires validation\n        const infoChartTab = useSelector((state) => state.extraInfo.value)\n        const userEmail = useSelector((state) => state.userData.value)\n        const [confirmAdd, updateConfirmAdd] = useState(false)\n        const [displayNotLogged, updateDisplayNotLogged] = useState(false)\n\n\n\n        //used when confirm is pressed on pop up \n        const addNewTrade = () => {\n\n            const date = new Date().getTime()\n\n            //dispatch if data is received from chart tab\n            if (infoChartTab && orderType === 'marketOrder') {\n                dispatch(setNewTrade({\n                    posType: positionType,\n                    entryPrice: infoChartTab.price,\n                    takeProfit: infoChartTab.takeProfit,\n                    stopLoss: infoChartTab.stopLoss,\n                    date: date,\n                    cryptoCoin: currentCoin.cryptoCoin,\n                    cryptoImage: getCryptoImage(currentCoin.cryptoCoin)\n                }))\n            }\n            //fix\n            else if (infoChartTab && orderType === 'limitOrder') {\n              \n                dispatch(setNewTrade({\n                    posType: positionType,\n                    entryPrice: infoChartTab.price,\n                    takeProfit: infoChartTab.takeProfit,\n                    stopLoss: infoChartTab.stopLoss,\n                    date: (paramChartClicked) ? paramChartClicked.time : date,\n                    cryptoCoin: currentCoin.cryptoCoin,\n                    cryptoImage: getCryptoImage(currentCoin.cryptoCoin)\n                }))\n            }\n            updateConfirmAdd(false)\n            updateStopLoss('')\n            updateTakeProfit('')\n            updateLimitPrice('')\n            updateTime(['', ''])\n\n\n            updateFill(false)\n        }\n        //used when add to portfolio button is pressed\n        const handleAddToPortfolio = () => {\n            var limitPriceEmpty = (limitPrice === '' || stopLoss === '' || takeProfit === '')\n            var dateLimitPriceEmpty = (limitPrice === '' || stopLoss === '' || takeProfit === '' || time[0] === '')\n            var marketOrderEmpty = (stopLoss === '' || takeProfit === '')\n\n            //check if there is a value \n            if (marketOrderEmpty && orderType === 'marketOrder') {\n                console.log('Plase Fill Market Info')\n                updateFill(true)\n                return\n            } else if (limitPriceEmpty && orderType === 'limitOrder' && !checkBox) {\n                console.log('Please Fill Limit Info')\n                updateFill(true)\n                return\n            } else if (dateLimitPriceEmpty && orderType == 'limitOrder' && checkBox) {\n                console.log('Please Fill Limit Info')\n                updateFill(true)\n                return\n\n            }\n            //All of the values are filled and now confirmation button appears \n\n            updateConfirmAdd(true)\n        }\n\n        return (\n            <>\n\n                {(confirmAdd) ?\n                    (<div\n                        className='calc_output_button_confirm'>\n                        <button className=\"calc_output_button_confirm_cancel\" onClick={() => updateConfirmAdd(false)}>Cancel</button>\n                        <button className='calc_output_button_confirm_confirm' onClick={() => addNewTrade()}>Confirm!</button>\n\n                    </div>) : ''\n                }\n\n                <button\n                    className={(userEmail !== null) ? 'calc_output_button' : 'calc_output_button_false'}\n                    onClick={() => (userEmail !== null) ? handleAddToPortfolio() : updateDisplayNotLogged(true)}>\n                    <p>Add Trade To Portfolio</p>\n                    {\n                        (!userEmail) ? (\n                            <i className=\"fa-solid fa-lock fa-2x\"></i>\n                        ) : ''\n                    }\n                </button>\n\n                {(displayNotLogged) ?\n                    (<div\n                        className=\"calc_output_button_notSignedIn\">\n                        <i onClick={() => updateDisplayNotLogged(false)} className=\"fa-solid fa-location-crosshairs fa-2x\"></i>\n\n                        <p>You need to sign in !</p>\n                        <p>• Sign in to add trades</p>\n                        <p>• View trades on chart </p>\n                        <p>• View and track portfolio (coming soon)</p>\n                    </div>) : ''\n                }\n         \n            </>\n        )\n    }\n\n\n    return (\n        <>\n            <div className=\"calc_outer\" >\n\n                <div className=\"calc_infoBox\">\n\n                    <img className=\"cryptoImage\" src={currentCoin.cryptoImage} alt=\"alternatetext\"></img>\n                    <p className=\"cryptoName\">{currentCoin.cryptoCoin}</p>\n                    <i className=\"fa-solid fa-angle-up\"></i>\n\n                    <div className=\"calc_infoBox_cryptoDropDown-content\">\n                        {\n                            cryptoCoins.map((coin, index) => {\n\n                                return (\n                                    <div\n                                        key={index}\n                                        className='calc_infoBox_cryptoDropDown-content-div'\n                                        onClick={() => dispatch(setCoin({\n                                            cryptoCoin: coin.cryptoName,\n                                            cryptoImage: coin.cryptoImage\n                                        }))}>\n\n                                        <img className=\"cryptoImage\" src={coin.cryptoImage} alt=\"alternatetext\"></img>\n                                        <p>{coin.cryptoName}</p>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n\n\n                </div>\n                <div className=\"calc_Pos_Button\">\n\n                    <div className=\"calc_btn-group\">\n                        <button id=\"marketOrder\" onClick={handleOrderType} className='orderType'>Market Order</button>\n                        <button id=\"limitOrder\" onClick={handleOrderType} className='orderType'>Limit Order</button>\n                    </div>\n\n\n                </div>\n                {\n                    MarketOrderDiv()\n                }\n                <div className=\"calc_output\">\n                    \n    \n                    <ButtonAddToPortfolio />\n                \n\n                </div>\n            </div>\n        </>\n    )\n\n\n};\n\n","\n// data used to pass from chart -> calc\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: null,\n}\n\n const extraInfoChartSlice = createSlice({\n  name: 'extraInfo',\n  initialState,\n  reducers: {\n    setExtraInfo: (state,action) => {\n      \n      state.value = action.payload\n    },\n\n  },\n})\n\n\n// Action creators are generated for each case reducer function\nexport const { setExtraInfo } = extraInfoChartSlice.actions\n\nexport default extraInfoChartSlice.reducer\n","\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value:{\n    price:'',\n    time:''\n  }\n}\n\n const paramClickSlice = createSlice({\n  name: 'ParamClicked',\n  initialState,\n  reducers: {\n    setParamClick: (state,action) => {\n      \n      state.value = action.payload\n    },\n\n  },\n})\n\n\n// Action creators are generated for each case reducer function\nexport const { setParamClick } = paramClickSlice.actions\n\nexport default paramClickSlice.reducer\n","import './ChartTab.css'\nimport React, { useState, useEffect, useTransition } from 'react';\nimport { GetCandles, GetLiveCandle } from '../ApiReq/PriceData';\n\nimport { createChart, CrosshairMode, LineStyle } from 'lightweight-charts';\nimport { useRef } from 'react';\nimport { useCallback } from 'react';\n\n\nimport { GetCryptoInfo } from '../ApiReq/PriceData'\nimport { setExtraInfo } from '../Storage/ExtraInfoFromChart'\nimport { setParamClick } from '../Storage/ParamClickChart'\nimport { useDispatch, useSelector } from 'react-redux';\n\n//https://rmolinamir.github.io/typescript-cheatsheet/\n\nexport const ChartTab = () => {\n\n\n    const [currentTimeFrame, updateTimeFrame] = useState('30m')\n    const timeFrames = ['30m', '1h', '4h']\n    const getLivePrice = useRef(null);\n\n\n    var dispatch = useDispatch()\n    var chart = useRef(null);\n    var newSeries = useRef(null);\n    const chartContainerRef = useRef();\n    const purchasePrice = useRef(null);\n    const stopLossPrice = useRef(null);\n    const takeProfPrice = useRef(null);\n    const calcTabInfo = useSelector(state => state.calcInfo.value)\n    const cryptoCoin = useSelector(state => state.cryptoCoin.value.cryptoCoin)\n    const allTrades = useSelector((state) => state.allTrades.value)\n    const [isPending, startTransition] = useTransition()\n\n    //create chart \n    useEffect(\n        () => {\n            const chartOptions = {\n                handleScale: {\n                    axisPressedMouseMove: true\n                },\n                layout: {\n                    backgroundColor: '#253248',\n                    textColor: 'rgba(255, 255, 255, 0.9)',\n                },\n                grid: {\n                    vertLines: {\n                        color: '#334158',\n                    },\n                    horzLines: {\n                        color: '#334158',\n                    },\n                },\n                crosshair: {\n                    mode: CrosshairMode.Normal,\n\n                },\n                priceScale: {\n                    borderColor: '#485c7b',\n                },\n                timeScale: {\n                    borderColor: '#485c7b',\n                },\n                width: chartContainerRef.current.clientWidth,\n                height: chartContainerRef.current.clientHeight,\n                timeScale: {\n                    timeVisible: true,\n                    secondVisible: false,\n                    // borderVisible:false\n                }\n            };\n\n            //create chart at chartContainerRef with rhose options \n            chart.current = createChart(chartContainerRef.current, chartOptions);\n            chart.current.timeScale().fitContent();\n            //FETCH OLD AND LIVE CANDLES \n            newSeries.current = chart.current.addCandlestickSeries()\n\n            function myClickHandler(param) {\n                if (!param.point) {\n                    return;\n                }\n                const price = newSeries.current.coordinateToPrice(param.point.y).toFixed(2)\n                var time = (param.time) * 1000\n                time = (Number.isNaN(time)) ? '' : time\n                // console.log(time)\n                dispatch(setParamClick({\n                    price: price,\n                    time: time\n                }))\n\n                // console.log(`Click at ${param.point.x}, ${param.point.y}. The time is ${param.time}.`);\n            }\n\n            chart.current.subscribeClick(myClickHandler);\n\n            //used to resize observer\n            const resizeO = new ResizeObserver(() => {\n                chart.current.applyOptions(\n                    {\n                        width: chartContainerRef.current.clientWidth,\n                        height: chartContainerRef.current.clientHeight,\n                    });\n            })\n\n            resizeO.observe(chartContainerRef.current)\n\n\n            return () => {\n                resizeO.disconnect()\n            }\n\n        }, []);\n\n    //update price chart \n    useEffect(() => {\n\n        const conn = new WebSocket(GetLiveCandle(currentTimeFrame, cryptoCoin));\n        //taken fron priceData.js\n        startTransition(()=>{\n        \n\n            conn.onmessage = function (event) {\n                var liveData = JSON.parse(event.data)\n    \n                var editLiveData = {\n                    time: liveData.k.t / 1000,\n                    open: liveData.k.o,\n                    high: liveData.k.h,\n                    low: liveData.k.l,\n                    close: liveData.k.c\n                }\n                getLivePrice.current = editLiveData.close;\n                newSeries.current.update(editLiveData)\n            }\n            //taken fron priceData.js \n            GetCandles(currentTimeFrame, cryptoCoin)\n                .then(Resp => {\n    \n                    const candles = Resp.data.map((d) => ({\n    \n                        'time': d[0] / 1000,\n                        'open': d[1],\n                        'high': d[2],\n                        'low': d[3],\n                        'close': d[4]\n                    }))\n                    //As web scoket is delayed by 2 seconds, im setting live price to last candle open price \n                    const candleLen = candles.length\n    \n                    getLivePrice.current = candles[candleLen - 1].open\n                    newSeries.current.setData(candles)\n                })\n                \n            })\n            \n\n        return () => {\n            conn.close()\n        }\n    }, [currentTimeFrame, cryptoCoin])\n\n\n    //used to delete price lines function\n    const deletePriceChart = () => {\n\n        if (purchasePrice.current) {\n\n            newSeries.current.removePriceLine(purchasePrice.current)\n            purchasePrice.current = null\n\n            newSeries.current.removePriceLine(stopLossPrice.current)\n            stopLossPrice.current = null\n\n            newSeries.current.removePriceLine(takeProfPrice.current)\n            takeProfPrice.current = null\n\n        }\n    }\n\n    //price passed in, position type(long/short), tp or sl\n    const updatePosPriceChart = (price, positionType, stopOrTake, percentChange) => {\n\n\n        if (stopOrTake === 'takeProfit') {\n            //if long add +\n            if (positionType === 'long') {\n                var getTp = price + ((percentChange / 100) * price)\n                //if short take away --\n            } else if (positionType === 'short') {\n                var getTp = price - ((percentChange / 100) * price)\n            }\n            return getTp\n        }\n        //adjust stop loss\n        else {\n            //if short \n            if (positionType === 'long') {\n                var getSl = price - ((percentChange / 100) * price)\n                //if long take away --\n            } else if (positionType === 'short') {\n                var getSl = price + ((percentChange / 100) * price)\n            }\n            return getSl\n        }\n\n    }\n\n    //used to add and update stop loss and take profit - used to dispatch price sl and tp to calc \n    const updatePriceChart = (priceLocal, stopLossLocal, takeProfitLocal, positionType, checkBox) => {\n\n        var priceLines = purchasePrice.current === null && stopLossPrice.current === null && takeProfPrice.current === null\n        //if price line exists \n        if (priceLines) {\n            //create price lines (current price) - subject to change\n            purchasePrice.current = newSeries.current.createPriceLine({\n                title: 'entry @',\n                color: '#b0c4de',\n                lineWidth: 1,\n                lineStyle: null,\n                axisLabelVisible: true,\n                lineVisible: true,\n            });\n            //create stop loss price\n            stopLossPrice.current = newSeries.current.createPriceLine({\n                title: 'StopLoss @',\n                color: 'red',\n                lineWidth: 2,\n                lineStyle: null,\n                axisLabelVisible: true,\n                lineVisible: true\n            })\n\n            //create take profit\n            takeProfPrice.current = newSeries.current.createPriceLine({\n                title: 'TakeProfit @',\n                color: 'green',\n                lineWidth: 2,\n                lineStyle: null,\n                axisLabelVisible: true,\n                lineVisible: true\n            })\n        }\n        \n        var takeProfitUsd = updatePosPriceChart(parseFloat(priceLocal), positionType, 'takeProfit', takeProfitLocal)\n        var stopLossUsd = updatePosPriceChart(parseFloat(priceLocal), positionType, 'stopLoss', stopLossLocal)\n\n        purchasePrice.current.applyOptions({\n\n            price: priceLocal\n        })\n\n        takeProfPrice.current.applyOptions({\n            price: takeProfitUsd\n        })\n\n        stopLossPrice.current.applyOptions({\n            price: stopLossUsd\n        })\n\n        //dispatch to calculator tab\n        dispatch(setExtraInfo({\n            price: parseFloat(priceLocal).toFixed(2),\n            stopLoss: stopLossUsd.toFixed(2),\n            takeProfit: takeProfitUsd.toFixed(2)\n        }))\n\n    }\n\n\n    //used to detect if values are changed \n    useEffect(() => {\n\n\n        if (calcTabInfo === null) {\n            //as there is not data coming from calc, we reset and send null data back \n            dispatch(setExtraInfo(null))\n            //make sure to remove price lines \n            deletePriceChart()\n            return;\n        }\n        var orderType = calcTabInfo.orderType;\n        var stopLoss = calcTabInfo.stopLoss;\n        var takeProfit = calcTabInfo.takeProfit;\n        var takeProfit = calcTabInfo.takeProfit;\n        var price = calcTabInfo.price;\n        var positionType = calcTabInfo.positionType;\n        var checkBox = calcTabInfo.checkBox;\n\n        if (orderType === 'marketOrder') {\n            updatePriceChart(getLivePrice.current, stopLoss, takeProfit, positionType, checkBox)\n            return\n        } else if (orderType === 'limitOrder') {\n            updatePriceChart(price, stopLoss, takeProfit, positionType, checkBox)\n\n        }\n\n\n    }, [calcTabInfo])\n\n    //display all trades\n    useEffect(() => {\n\n        if (allTrades === null) return\n        var markers = [];\n        allTrades.map((trade) => {\n            // console.log(typeof(trade.date))\n            // console.log(trade.date)\n            if (trade.cryptoCoin !== cryptoCoin) return;\n            markers.push({\n                time: trade.date / 1000,\n                position: (trade.posType === 'short') ? 'aboveBar' : 'belowBar',\n                color: (trade.posType === 'short') ? '#e91e63' : '#008000',\n                shape: (trade.posType === 'short') ? 'arrowDown' : 'arrowUp',\n                text: (trade.posType === 'short') ? 'Sell' : 'Buy'\n            })\n        })\n        newSeries.current.setMarkers(markers);\n\n    }, [allTrades, cryptoCoin])\n\n    const TopInfoContainer = useCallback(() => {\n\n        const [cryptoInfo, updateCryptoInfo] = useState([])\n        useEffect(() => {\n\n            //Set extra info\n            function setTimerInfo() {\n                //pass coin info to api\n                GetCryptoInfo(cryptoCoin).then(resp => {\n                    var priceChangePercent = parseFloat(resp.data.priceChangePercent).toFixed(2)\n                    var lowPrice = parseFloat(resp.data.lowPrice).toFixed(2)\n                    var openPrice = parseFloat(resp.data.openPrice).toFixed(2)\n\n                    const cryptoInfoLocal = [priceChangePercent, lowPrice, openPrice]\n                    updateCryptoInfo(cryptoInfoLocal)\n\n\n                })\n            }\n            //run once on load \n            setTimerInfo()\n            //stat timer \n            var getInfoInterval = setInterval(setTimerInfo, 2000)\n            return () => {\n                clearInterval(getInfoInterval)\n            }\n        }, [cryptoCoin])\n\n        return (\n            <>\n                <div>\n                    24h Percent Change<br />\n                    <p style={cryptoInfo[0] > 0 ? { color: 'green' } : { color: 'red' }}>{cryptoInfo[0]}</p>\n\n                </div>\n                <div>\n\n                    24h Low<br />\n                    {cryptoInfo[1]}\n                </div>\n            </>\n        )\n    }, [cryptoCoin])\n    return (\n        <>\n\n            <div className=\"delete\" style={{ position: 'absolute', top: '0' }}>\n                {/* {\n                timeFrames.map((timeFrame)=>{\n                    //console.log(timeFrame)\n                })\n                } */}\n\n            </div>\n            <div className=\"chartTab_info\">\n                {/* this is updated every 2 seconds hence its a user defined component  */}\n                <TopInfoContainer />\n\n\n                <div className=\"chartTab_timerDropDown\">\n                    Time Frame\n                    <br />\n                    {currentTimeFrame}\n                    <div className=\"chartTab_timerDropDown-content\">\n                        {\n                            timeFrames.map((timeFrame, index) => {\n                                return (<p className='chartTab_timerDropDown-content-button' key={index} >\n                                    <button onClick={() => { updateTimeFrame(timeFrame) }}>{timeFrame}</button>\n                                    <br />\n                                </p>)\n\n                            })\n                        }\n                    </div>\n                    <i className=\"fa-solid fa-angle-up\"></i>\n                </div>\n\n            </div>\n\n            <div className=\"chartTab_outer\" >\n\n                <div className=\"chartTab_container\">\n\n                    <div ref={chartContainerRef} style={{\n                        'width': '100%',\n                        'height': '100%'\n                    }}>\n                    </div>\n                </div>\n\n            </div>\n\n        </>\n    )\n\n}\n\n","\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: true,\n}\n\n const chartClickedSlice = createSlice({\n  name: 'chartClicked',\n  initialState,\n  reducers: {\n    displayChart: (state,action) => {\n      \n      state.value = action.payload\n    },\n\n  },\n})\n\n\n// Action creators are generated for each case reducer function\nexport const { displayChart } = chartClickedSlice.actions\n\nexport default chartClickedSlice.reducer\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from \"firebase/auth\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from 'firebase/firestore';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey:`${process.env.REACT_APP_APIKEY}`,\n  authDomain:`${process.env.REACT_APP_APIAUTHDOM}`,\n  projectId: `${process.env.REACT_APP_PROJID}`,\n  storageBucket: `${process.env.REACT_APP_STORBUCKET}`,\n  messagingSenderId: `${process.env.REACT_APP_MESSAGESENDER}`,\n  appId: `${process.env.REACT_APP_APPID}`,\n  measurementId: `${process.env.REACT_APP_MEASUREMENTID}`\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// const analytics = firebase.getAnalytics(app);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\ngetAnalytics(app);\n\nexport {db,auth};","import React, { useState, useEffect } from \"react\";\nimport './SignOut.css';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { signOut } from \"firebase/auth\"\nimport { auth } from \"../Firebase/Firebase\";\nimport { useRef } from \"react\";\n//render both and show only the real one using user info \n\nexport const SignOut = (props) => {\n\n\n    const userEmail = useSelector((state) => state.userData.value)\n    var currentUserEmail = useRef();\n    var displayLogin = props.display.displayLogin\n    var updateDisplayLogin = props.display.updateDisplayLogin\n\n    //fuunction to sign out using firebase \n    const firebase_signOut = () => {\n\n        signOut(auth).then(() => {\n\n            // Sign-out successful.(so remove signout display)\n            updateDisplayLogin(false)\n        }).catch((error) => {\n\n        });\n    }\n\n        useEffect(() => {\n            currentUserEmail.current = userEmail\n        }, [userEmail])\n\n        return displayLogin && userEmail!==null?(\n            <div className=\"signOut_outer\">\n\n                <div className=\"signOut_innerbox\">\n\n                    <div className=\"signOut_logo\">\n                        <h1> My Account </h1>\n                    </div>\n                    <div className=\"login_line\">\n\n                    </div>\n                    <div className=\"signOut_icon\">\n\n                        <i className=\"fa-solid fa-dragon fa-4x\"></i>\n                    </div>\n                    <div className=\"signOut_email\">\n                        You are currenly signed in with this email address\n                        <br />\n                        <br />\n                        {userEmail}\n\n                    </div>\n\n                    <div className=\"signOut_login\">\n\n                        Sign Out?<a href='/' className='login_login_link' onClick={firebase_signOut}> here</a>\n                    </div>\n                <i onClick={()=>updateDisplayLogin(false)} className=\"fa-solid fa-location-crosshairs fa-2x\"></i>\n                </div>\n\n\n            </div>\n        ):''\n    }","import React, { useRef } from \"react\";\nimport { auth } from '../Firebase/Firebase'\nimport { GoogleAuthProvider, signInWithPopup, GithubAuthProvider, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport './LoginModal.css'; //made easier for modal \nimport { Link } from \"react-router-dom\";\nexport const Login = (props) => {\n\n    const [email, updateEmail] = useState();\n    const [password, updatePassword] = useState();\n    const [error, updateError] = useState('');\n    const userEmail = useSelector((state) => state.userData.value)\n\n    var displayLogin = props.display.displayLogin\n    var updateDisplayLogin = props.display.updateDisplayLogin\n\n\n\n    function handleEmail(e) {\n\n        updateEmail(e.target.value);\n    }\n    function handlePassword(e) {\n        updatePassword(e.target.value);\n    }\n\n    const handleaccount = (e) => {\n        e.preventDefault()\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                // Signed in \n                const user = userCredential.user;\n                // ...\n                updateDisplayLogin(false)\n                updateError('')\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                updateError(errorCode);\n            });\n\n    }\n    function handleFacebook() {\n        const provider = new GoogleAuthProvider();\n\n        signInWithPopup(auth, provider)\n            .then((result) => {\n                // This gives you a Google Access Token. You can use it to access the Google API.\n                const credential = GoogleAuthProvider.credentialFromResult(result);\n                const token = credential.accessToken;\n                // The signed-in user info.\n                const user = result.user;\n\n                if (result) {\n                    //removes login pop up\n                    updateDisplayLogin(false)\n                }\n                // ...\n            }).catch((error) => {\n                console.log(error)\n                // Handle Errors here.\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                // The email of the user's account used.\n                const email = error.customData.email;\n                // The AuthCredential type that was used.\n                const credential = GoogleAuthProvider.credentialFromError(error);\n                console.log(error)\n                // ...\n            });\n    }\n\n    function handleGithub() {\n        const provider = new GithubAuthProvider();\n\n        signInWithPopup(auth, provider)\n            .then((result) => {\n                // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n                const credential = GithubAuthProvider.credentialFromResult(result);\n                const token = credential.accessToken;\n                console.log(result)\n                // The signed-in user info.\n                const user = result.user;\n                if (result) {\n                    //removes login pop up\n                    updateDisplayLogin(false)\n                }\n                // ...\n            }).catch((error) => {\n                console.log(error)\n                // Handle Errors here.\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                // The email of the user's account used.\n                const email = error.customData.email;\n                // The AuthCredential type that was used.\n                const credential = GithubAuthProvider.credentialFromError(error);\n                // ...\n            });\n\n    }\n    return (displayLogin && userEmail === null) ? (\n        <div className=\"login_outer\">\n\n            <div className=\"login_innerbox\">\n\n\n                <div className=\"login_logo\">\n                    <h1>Log in </h1>\n                </div>\n                <div className=\"login_line\">\n\n                </div>\n\n                <div className=\"login_signupUsing\">\n                    <p>Log in using :</p>\n                </div>\n\n\n                <div className=\"login_signupOptions\">\n\n\n                    <i onClick={handleGithub} className=\"fa-brands fa-github fa-2x\"></i>\n\n                    <i onClick={handleFacebook} className=\"fa-brands fa-google fa-2x\"></i>\n\n\n                </div>\n                <div className=\"login_or\">\n\n                    <p>or sign in:</p>\n                </div>\n\n                <form onSubmit={handleaccount}>\n\n                    <div className=\"login_input\">\n\n                        <div className=\"login_error\">\n                            {error}\n\n                        </div>\n\n                        <input type=\"email\" className=\"login_email\" placeholder=\"Email\" value={email} onChange={handleEmail} required />\n\n\n                        <input type=\"text\" className=\"login_password\" placeholder=\"Password\" value={password} onChange={handlePassword} required />\n                    </div>\n\n\n\n\n                    <div className=\"login_signup\">\n                        <button type='submit' className=\"login_button\">Log in </button>\n                    </div>\n\n\n                </form>\n\n                <div className=\"login_login\">\n                    Create account?<Link to='/create_account' className='login_login_link'> click here</Link>\n                </div>\n                <i onClick={()=>updateDisplayLogin(false)} className=\"fa-solid fa-location-crosshairs fa-2x\"></i>\n\n            </div>\n        </div>\n\n\n    ) : ' '\n\n}","import React, { Component, useEffect, useRef } from 'react';\n\nimport './Navbar.css'\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { displayChart } from '../Storage/Chartclicked_data'\nimport { SignOut } from './SignOut';\nimport { Login } from './Login.js'\n\nfunction Navbar() {\n    \n    var loginButton = useRef();\n    const dispatch = useDispatch();\n    const chartClick = useSelector((state) => state.chartClicked.value)\n    const userEmail = useSelector((state) => state.userData.value)\n\n    const [menuClick, updateMenuClick] = useState(false)\n    const [settingClick, updateSettingclick] = useState(false)\n\n    const [displayLogin, updateDisplayLogin] = useState(false)\n    \n\n\n    const menuClicked = () => {\n        // this.setState({menuClicked:!this.state.menuClicked}) \n        updateMenuClick(!menuClick)\n\n    }\n    const settingClicked = () => {\n        // this.setState({settingClicked:!this.state.settingClicked})\n        updateSettingclick(!settingClick)\n    }\n\n    const Value = [\n\n        {\n            title: 'Portfolio Tracker (Coming Soon)',\n            url: 'google.com',\n            cName: 'nav-links'\n        }\n    ]\n\n    return (\n        \n        <nav className=\"NavbarItems\">\n\n            <div className='menu-icon container' onClick={menuClicked}>\n                <div className='menu-icon' >\n                    <i className={menuClick ? 'fas fa-times' : 'fas fa-bars'}></i>\n                </div>\n\n            </div>\n\n            {/* <div className='menu-icon container' onClick={this.settingClicked}>\n                    <div className='menu-icon'>\n                    <i className={'fa-solid fa-gear'} ></i>\n                    </div>\n                    \n                </div> */}\n\n            <div className='menu-icon container' onClick={() => dispatch(displayChart(!chartClick))}>\n                <div className='menu-icon'>\n\n                    <i className={chartClick ? 'fa-solid fa-toggle-on' : 'fa-solid fa-toggle-off'} ></i>\n                </div>\n            </div>\n\n         \n\n\n\n\n            <div className='menu-icon container' id='userLoginButton' onClick={()=>updateDisplayLogin(!displayLogin)}>\n\n                <div className='menu-icon' id='login-menu-icon'>\n                    {/* shows sign in or out according to user info(taken from redux store) */}\n                    <label className='fontm'>{userEmail ? 'Sign Out' : 'Sign In'}</label>\n                    <i className={userEmail ? 'fa-solid fa-user-check' : 'fa-solid fa-user-xmark'}></i>\n                    {/* <i class={\"fa-solid \" + 'fa-user-xmark'}></i> */}\n                </div>\n\n            </div>\n     \n\n            {\n                //if user is logged in dont shpw log in page, if hes logged in show sign out  \n               <Login display = {{displayLogin,updateDisplayLogin}}/>         \n            }\n\n            {\n                <SignOut display = {{displayLogin,updateDisplayLogin}}/>\n            }\n\n            <ul className={menuClick ? 'nav-menu active' : 'nav-menu'}>\n                {Value.map((item, index) => {\n                    return (\n                        <li key={index}>\n                            <a className={item.cName} href={item.url}>\n                                {item.title}\n                            </a>\n                        </li>\n                    )\n                })}\n            </ul>\n\n        </nav>\n    )\n\n}\nexport default Navbar;","import React, { Component } from 'react'\nimport './Footer.css'\nexport function Footer(){\n\n    return(\n        <div className=\"footer\">\n            <div className=\"footerInfo\">\n                <p>v4 - Hamz raise an issue  <a href=\"https://github.com/Hamz-06/crypto-position-calculator\"> here </a></p>\n\n            </div>\n        </div>\n    )\n}\n","import { db } from \"./Firebase\";\nimport { collection, setDoc, doc, getDoc, getDocs, where, addDoc, query,deleteDoc } from \"firebase/firestore\";\n\n\n\n//create a user database\nexport const createUserDataBase = async (userId) => {\n    //get specific user \n    //collection\n\n    const getUserRef = doc(db, 'user', userId);\n    //doc snap\n    const docSnap = await getDoc(getUserRef);\n    //check if user exists\n    if (docSnap.exists()) {\n        //if no existence create one \n    } else {\n        //get collection of all users \n        await setDoc(doc(db, 'user', userId), {})\n    }\n}\n\n//add trade \nexport const displayTradeDataBase = async (userId) => {\n    var trades = []\n\n    // // display all trades\n    const getUserCollRef = collection(db, 'user', userId, 'trade');\n    //const docSnap = query(getUserCollRef)\n    const docSnap = await getDocs(getUserCollRef)\n\n    docSnap.forEach((doc) => {\n\n        var trade = {\n            tradeId: doc.id,\n            posType: doc.data().posType,\n            entryPrice: doc.data().entryPrice,\n            takeProfit: doc.data().takeProfit,\n            stopLoss: doc.data().stopLoss,\n            date: doc.data().date,\n            cryptoCoin: doc.data().cryptoCoin\n        }\n        //fetches old to new trades \n        \n        trades.push(trade)\n    })\n\n    //we have to reverse the trades so new -> old b-a and sort date \n    trades = trades.sort((a,b)=>b.date-a.date);\n   \n\n    return trades\n\n\n}\n\nexport const addTradeDatabase = async (tradeInfo,uniqueId) => {\n    \n    //add a trade\n    await addDoc(collection(db, 'user', uniqueId, 'trade'), {\n        posType: tradeInfo.posType,\n        entryPrice: tradeInfo.entryPrice,\n        takeProfit: tradeInfo.takeProfit,\n        stopLoss: tradeInfo.stopLoss,\n        date: tradeInfo.date,\n        cryptoCoin: tradeInfo.cryptoCoin\n\n    })\n}\n\n//used to fetch and delete a trade (this could be used to edit in the future)\nexport const fetchTradeDataBase =async (tradeDate, uniqueId) => {\n    const userColl = collection(db, \"user\", uniqueId, 'trade');\n    // Create a query against the collection.\n    const trade = query(userColl, where(\"date\", \"==\", tradeDate));\n\n    const tradeSnapshot = await getDocs(trade);\n    var docId;\n    tradeSnapshot.forEach((doc) => {\n        // doc.data() is never undefined for query doc snapshots\n        console.log(doc.id, \" => \", doc.data());\n        docId = doc.id\n    });\n    \n    await deleteDoc(doc(db, \"user\", uniqueId,'trade',docId));\n\n\n\n}\n","import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: null,\n}\n\n const allTradesSlice = createSlice({\n  name: 'allTrades',\n  initialState,\n  reducers: {\n    setAllTrades: (state,action) => {\n      \n      state.value = action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setAllTrades } = allTradesSlice.actions\n\nexport default allTradesSlice.reducer\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\nimport './TradeTrackerPrev.css'\nimport { displayTradeDataBase } from '../Firebase/Firebase_user_info'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useRef } from \"react\";\nimport { addTradeDatabase, fetchTradeDataBase } from '../Firebase/Firebase_user_info'\nimport { cryptoCoins, getCryptoImage, unixToDate } from '../ApiReq/PriceData'\nimport { useSpring, animated, useTransition } from 'react-spring'\nimport { Link } from \"react-router-dom\";\nimport { setAllTrades } from \"../Storage/AllTrades\";\nexport function TradeTracker() {\n\n    const userId = useSelector((state) => state.userId.value)\n    const fetchTrade = useSelector((state) => state.newTrade.value)\n    const [oldTrades, updateOldTrades] = useState(null) //starts with null\n    const [newTrades, updateNewTrades] = useState([])\n    const dispatch = useDispatch()\n\n    //redux - send old + new trades to redux storage\n    useEffect(() => {\n        if (oldTrades === null) return;\n\n        const allTrades = oldTrades.concat(newTrades)\n        dispatch(setAllTrades(allTrades))\n\n    }, [oldTrades, newTrades])\n\n    //delete trade \n    function deleteTrade(index, date, userId, array, updateArray) {\n        const newArray = array.filter((_, i) => index !== i)\n        // console.log(oldTrades,newArray)\n        // console.log(oldTrades.length, newArray.length)\n        fetchTradeDataBase(date, userId)\n        updateArray(newArray)\n    }\n\n    //used to fetch old trades \n    useEffect(() => {\n        if (!userId) return;\n        \n        //fetches trade from firebase database \n        displayTradeDataBase(userId)\n            .then((res) => {\n                updateOldTrades(res)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n    }, [userId])\n    //used to fetcch new trades\n    useEffect(() => {\n\n\n        //fetch trade starts at null\n        if (!fetchTrade) return;\n        addTradeDatabase(fetchTrade, userId)\n        updateNewTrades([fetchTrade, ...newTrades])\n\n    }, [fetchTrade])\n\n    //display old trade \n    const DisplayOldTrades = () => {\n        \n        const tradeTrackAnim = useSpring({ to: { opacity: 1, x: 0, y: 0 }, from: { opacity: 0, x: 200, y: 0 } })\n        //if there is data inside old trades\n        if (!oldTrades) return\n        return oldTrades.map((trade, key) => {\n            //gets logo of symbol\n            var symbolLogo = getCryptoImage(trade.cryptoCoin)\n\n            //get date and time -> 21/07/2022, 01:03:50 --- splice comma \n            const dateAndTime = unixToDate(trade.date)\n            const arrayDate = dateAndTime.split(',')\n            return (\n                < animated.tr key={key} style={tradeTrackAnim}>\n                    <td>\n                        {arrayDate[0]}<br />{arrayDate[1]}\n                    </td>\n                    <td>\n                        <div>\n                            {trade.cryptoCoin}\n                            <img src={symbolLogo} alt=\"alternatetext\"></img>\n\n                        </div>\n\n                    </td>\n                    <td>{trade.entryPrice}</td>\n                    <td>{trade.posType}</td>\n                    {/* used to delete the trade */}\n                    <td><i onClick={() => deleteTrade(key, trade.date, userId, oldTrades, updateOldTrades)} className=\"fa-solid fa-trash-can\"></i></td>\n                </animated.tr >\n            )\n        })\n    }\n\n\n    //display new trades\n    const DisplayNewTrades = () => {\n\n        const tradeTrackAnim = useSpring({ to: { opacity: 1, x: 0, y: 0 }, from: { opacity: 0, x: 200, y: 0 } })\n\n        if (!userId) return;\n        return newTrades.map((trade, key) => {\n            //get date and time -> 21/07/2022, 01:03:50 --- splice comma \n            const dateAndTime = unixToDate(trade.date)\n            const arrayDate = dateAndTime.split(',')\n\n            return (\n\n                < animated.tr key={key} style={tradeTrackAnim}>\n                    <td>\n                        {arrayDate[0]}<br />{arrayDate[1]}\n\n                    </td>\n                    <td>\n                        <div>\n                            {trade.cryptoCoin}\n                            <img src={trade.cryptoImage} alt=\"alternatetext\"></img>\n\n                        </div>\n\n                    </td>\n                    <td>{trade.entryPrice}</td>\n                    <td>{trade.posType}</td>\n                    <td><i onClick={() => deleteTrade(key, trade.date, userId, newTrades, updateNewTrades)} className=\"fa-solid fa-trash-can\"></i></td>\n                </animated.tr >\n\n            )\n        })\n    }\n\n\n    return (\n        <>\n\n\n            <div className=\"tracker_table_container\">\n                {\n                    //if user not logged in display lock\n                    (!userId)?(   \n                        <p className=\"signInPrompt\">Please sign in</p>\n                    ):''\n                }\n                <div className=\"tracker_table\">\n                    <table>\n\n                        {/* header for table */}\n                        <thead>\n                            <tr>\n                                <th>Trade Taken</th>\n                                <th>Symbol</th>\n                                <th>Entry Price</th>\n                                <th>Long/Short</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n\n                        {/* table body */}\n\n                        <tbody>\n\n                            {\n                                // user needs to be logged in for this to load \n                                <DisplayNewTrades />\n                            }\n                            {\n                                // user needs to be logged in for this to load \n                                <DisplayOldTrades />\n                            }\n\n                        </tbody>\n\n                    </table>\n                </div>\n\n\n                <a href='https://hamz-06.github.io/crypto-position-calculator/#/view_trades&potfolio' className=\"tracker_moreInfo_icon\" target=\"_blank\">\n                    <i className=\"fa-solid fa-pen-to-square\"></i>\n                </a>\n                {/* <div className=\"tracker_moreInfo\">\n                <i className=\"fa-solid fa-info\"></i>  Coming Out Soon\n            </div> */}\n            </div>\n\n\n\n        </>\n    )\n}","import { CalculatorTab } from '../Calc/CalculatorTab.jsx';\nimport { ChartTab } from '../chart/ChartTab.jsx';\nimport React, { } from 'react';\nimport Navbar from '../Navbar/Navbar'\nimport { Footer } from '../Footer/Footer.jsx';\nimport './HomePage.css';\nimport { useSelector } from 'react-redux'\nimport { TradeTracker } from '../tradetracker/TradeTrackerPrev.jsx'\nimport { useSpring, animated, useTransition } from 'react-spring'\nimport { display, style } from '@mui/system';\nexport function Homepage() {\n\n  const chartClicked = useSelector((state) => state.chartClicked.value)\n\n\n  const chartRemoveAnim = useTransition(chartClicked, {\n\n    from: {\n      x: 0, y: -300, opacity: 0,\n    },\n    enter: {\n      x: 0, y: 0, opacity: 1,\n    },\n\n  })\n  const chartRemoveDefaultAnim = (x) => {\n    return (x) ? { display: 'block' } : { display: 'none' }\n  }\n\n  const calculatorAnim = useSpring({ to: { opacity: 1, y: 0 }, from: { opacity: 0, y: 300 } })\n  return (\n    <>\n      <Navbar />\n      {/* entire screen outer */}\n      <div className=\"homePage_outer\">\n        {/* home page row splits into two with a aspect ratio of 1 to 2  */}\n        <div className=\"homePage_row\">\n\n          <animated.div className=\"homePage_cal_tab\" style={calculatorAnim}>\n            <CalculatorTab />\n          </animated.div>\n\n\n          {chartRemoveAnim((style, item) =>\n            <animated.div className=\"homePage_second_tab\" style={{\n              ...style,\n              ...chartRemoveDefaultAnim(item)\n            }}>\n              <div className=\"homePage_second_tab_chart\">\n                <ChartTab />\n              </div>\n              <div className=\"homePage_second_tab_tracker\">\n                <TradeTracker />\n              </div>\n            </animated.div>\n          )}\n\n        </div>\n\n      </div>\n      <Footer />\n\n\n    </>\n  )\n\n}\n","import React, { useState, } from \"react\"\nimport { useNavigate } from \"react-router-dom\";\nimport './CreateAccountPage.css'\nimport { Footer } from \"../Footer/Footer\";\nimport { auth } from \"../Firebase/Firebase\";\nimport { createUserWithEmailAndPassword,GoogleAuthProvider,signInWithPopup,GithubAuthProvider } from \"firebase/auth\";\nimport { Link } from \"react-router-dom\";\nexport function CreateAccountPage() {\n\n\n\n    const [email, updateEmail] = useState('');\n    const [password, updatePassword] = useState('');\n    const [error, updateError] = useState('');\n    //redirect when login \n    const usenavigate = useNavigate();\n\n\n    function handleFacebook(){  \n        const provider = new GoogleAuthProvider();\n\n        signInWithPopup(auth, provider)\n        .then((result) => {\n          // This gives you a Google Access Token. You can use it to access the Google API.\n          const credential = GoogleAuthProvider.credentialFromResult(result);\n          const token = credential.accessToken;\n          // The signed-in user info.\n          const user = result.user;\n      \n          if(result){\n            usenavigate('/')\n          }\n          // ...\n        }).catch((error) => {\n            console.log(error)\n          // Handle Errors here.\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          // The email of the user's account used.\n          const email = error.customData.email;\n          // The AuthCredential type that was used.\n          const credential = GoogleAuthProvider.credentialFromError(error);\n          console.log(error)\n          // ...\n        });\n    }\n\n    function handleGithub(){\n        const provider = new GithubAuthProvider();\n\n        signInWithPopup(auth, provider)\n        .then((result) => {\n          // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n          const credential = GithubAuthProvider.credentialFromResult(result);\n          const token = credential.accessToken;\n      \n          // The signed-in user info.\n          const user = result.user;\n          if(result){\n            usenavigate('/')\n          }\n          // ...\n        }).catch((error) => {\n          // Handle Errors here.\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          // The email of the user's account used.\n          const email = error.customData.email;\n          // The AuthCredential type that was used.\n          const credential = GithubAuthProvider.credentialFromError(error);\n          // ...\n        });\n      \n    }\n    \n    function handleaccount(event) {\n        event.preventDefault();\n\n        createUserWithEmailAndPassword(auth, email, password)\n            .then((auth) => {\n                console.log(auth)\n                if(auth){\n                    usenavigate('/')\n                }\n              \n            })\n\n            .catch((error) => {\n          \n                updateError(error.code)\n\n            })\n    }\n    function handleEmail(e){\n    \n        updateEmail(e.target.value);\n    }\n    function handlePassword(e){\n        updatePassword(e.target.value);\n    }\n    return (\n        <>\n        \n        \n        <div className=\"createAccount_outer\">\n\n            <div className=\"createAccount_innerbox\">\n\n\n                <div className=\"createAccount_logo\">\n                    <h1>Create Account</h1>\n                    \n                </div>\n\n\n                <div className=\"createAccount_signupUsing\">\n                    <p>Create Account using :</p>\n                </div>\n\n                <div className=\"createAccount_signupOptions\">\n\n\n                    <i onClick={handleGithub} className=\"fa-brands fa-github fa-2x\"></i>\n                    \n                    <i onClick={handleFacebook} className=\"fa-brands fa-google fa-2x\"></i>\n\n\n                </div>\n                <div className=\"createAccount_or\">\n\n                    <p>or :</p>\n                </div>\n\n                <form onSubmit={handleaccount}>\n                    <div className=\"createAccount_input\">\n\n                        <div className=\"createAccount_error\">\n                            {error}\n                        </div>\n                        <input type=\"email\" className=\"createAccount_email\" placeholder=\"Email\" value={email} onChange={ handleEmail } required />\n\n\n                        <input type=\"text\" className=\"createAccount_password\" placeholder=\"Password\" value={password} onChange={handlePassword} required />\n                    </div>\n\n\n            \n\n                    <div className=\"createAccount_signup\">\n                        <button type='submit' className=\"createAccount_button\" > Create Account </button>\n                    </div>\n\n\n                </form>\n\n                <div className=\"createAccount_login\">\n                    have an account?<Link to='/' className='createAccount_login_link'> log in</Link>\n                </div>\n\n            </div>\n        </div>\n        <Footer/>\n        </>\n    )\n}\n\n\n\n/*           \n <div className=\"caccount_container\">\n\n                <div>\n\n                    <h1 className='caccount_label'>Create Account</h1>\n                </div>\n\n                <form>\n\n                    <div className=\"caccount_input\">\n\n                        <label className='caccount_label'>Email</label>\n                        <input type=\"text\"\n                            className=\"caccount_userName_input\"\n                            value={email}\n                            onChange={(e) => {\n                                updateEmail(e.target.value)\n                                \n                            }}\n\n                        />\n\n                    </div>\n                    <div className=\"caccount_input\">\n                        <label\n                            className='caccount_label'>Password</label>\n                        <input type=\"text\"\n                            className=\"caccount_userName_input\"\n                            \n                            value={password}\n                        \n                            onChange={(e) => {\n\n                                updatePassword(e.target.value)\n                                \n                            }}\n                        />\n                    </div>\n                </form>\n                <div className='caccount_btn'>\n\n                    <button type='submit' className='caccount_btn_submit' onClick={handleaccount}>Create Account </button>\n                </div>\n                <a href='/' className='sign_up'>go back</a>\n\n            </div> \n*/","\nimport { createSlice } from '@reduxjs/toolkit';\nimport { useEffect } from 'react';\n\nconst initialState = {\n  value: null,\n}\n\n const userDataSlice = createSlice({\n  name: 'userData',\n  initialState,\n  reducers: {\n    setUserData: (state,action) => {\n      \n      state.value = action.payload\n     \n      \n    },\n\n  },\n})\n\n\n\n\n\n// Action creators are generated for each case reducer function\nexport const { setUserData } = userDataSlice.actions\n\nexport default userDataSlice.reducer\n","\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  value: null,\n}\n\n const userIdSlice = createSlice({\n  name: 'userId',\n  initialState,\n  reducers: {\n    setUserId: (state,action) => {\n  \n      state.value = action.payload\n           \n    },\n\n  },\n})\n\n\n// Action creators are generated for each case reducer function\nexport const { setUserId } = userIdSlice.actions\n\nexport default userIdSlice.reducer\n","import React from \"react\";\nimport './ViewTrades_Port.css';\n\nexport const ViewTrades_Port=()=>{\n\n    return<div className=\"ViewTrades_Port_outer\">Coming soon</div>\n}","\nimport './App.css';\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Homepage } from './Components/Pages/Homepage.jsx';\nimport { auth } from './Components/Firebase/Firebase';\nimport { onAuthStateChanged } from \"firebase/auth\";\n\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom'\nimport { CreateAccountPage } from './Components/Pages/CreateAccountPage.jsx'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setUserData } from './Components/Storage/UserEmail'\nimport {createUserDataBase} from '../src/Components/Firebase/Firebase_user_info'\nimport {setUserId} from './Components/Storage/UserId'\nimport {ViewTrades_Port} from './Components/Pages/ViewTades_Port'\nfunction App() {\n\n  const dispatch = useDispatch();\n  \n  const [load, updateLoad] = useState(false)\n\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, (user) => {\n  \n      if (user) {\n       \n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        const uid = user.uid;\n        dispatch(setUserData(user.email))\n        dispatch(setUserId(uid))\n        createUserDataBase(uid)\n\n        // ...\n      } else {\n        // User is signed out\n        // ...\n        dispatch(setUserData(null))\n        dispatch(setUserId(null))\n      }\n    });\n    updateLoad(true)\n    return unsub\n  }, [])\n\n  return (\n    <>\n      {/* prevents multiple refreshes due to redux user  */}\n      {load ?\n        (<Router basename=\"/\">\n          \n         \n          <Routes>\n\n            <Route exact path='/' element={\n              <Homepage />\n            } />\n\n            <Route path='/create_account' element={\n              <CreateAccountPage />\n            } />\n\n            <Route path='/view_trades&potfolio' element={\n              <ViewTrades_Port />\n            } />\n\n          </Routes>\n\n        </Router>\n        ) : null}\n\n\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport chartClickedReducer from './Chartclicked_data'\nimport userEmailReducer from './UserEmail'\nimport userIdSlicer from './UserId'\nimport newTradeSlice from './NewTrade'\nimport extraInfoSlice from './ExtraInfoFromChart'\nimport allTradesSlice from './AllTrades'\nimport paramClickSlice from './ParamClickChart'\nimport extraInfoCalctSlice from './ExtraInfroFromCalc'\nimport cryptoCoinSlice from './CryptoCoin'\n\nexport const Store = configureStore({\nreducer: {\n    chartClicked: chartClickedReducer,\n    userData: userEmailReducer,\n    userId:userIdSlicer,\n    newTrade:newTradeSlice,\n    extraInfo:extraInfoSlice,\n    allTrades:allTradesSlice,\n    paramClick:paramClickSlice,\n    calcInfo:extraInfoCalctSlice,\n    cryptoCoin:cryptoCoinSlice,\n\n  },\n})","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Store} from './Components/Storage/Storage';\nimport { Provider } from 'react-redux';\nimport {  onAuthStateChanged } from \"firebase/auth\";\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  // <React.StrictMode>\n  <Provider store={Store}>\n    <App />\n  </Provider>\n \n  /* </React.StrictMode> */\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}